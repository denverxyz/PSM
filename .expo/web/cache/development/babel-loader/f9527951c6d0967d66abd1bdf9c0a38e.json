{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from \"axios\";\nimport { MODULES_SUCCESS, MODULES_FAIL, QUESTIONS_SUCCESS, QUESTIONS_FAIL, COURSE_INFO, RESET_LEARNING, UPDATE_STATUS_SUCCESS, UPDATE_ANSWER_SUCCESS, LOADING_UPDATE_ANSWER, UPDATE_ANSWER_FAIL, LOADING_QUESTIONS, LOADING_MODULES } from \"../../actions\";\nimport { MODULES, UPDATE_STATUS, QUESTIONS, VALIDATE_ANSWER } from \"../../../config/Config\";\nimport { isEmpty, setAuthToken } from \"../../../utils/index\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport { getMyCourses } from \"../../main_screens/actions/courseActions\";\nexport var getModules = function getModules(course_id) {\n  return function _callee(dispatch) {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            dispatch({\n              type: LOADING_MODULES\n            });\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('uselfToken', function (error, value) {\n              if (error) {\n                console.log(error);\n              } else {\n                if (isEmpty(value)) {\n                  console.log(\"no token\");\n                } else {\n                  setAuthToken(value);\n                }\n              }\n            }));\n\n          case 3:\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(axios.get(MODULES(course_id)).then(function (response) {\n              dispatch({\n                type: MODULES_SUCCESS,\n                payload: response.data\n              });\n            }).catch(function (error) {\n              if (error.response) {\n                console.log(error.response.data.message);\n                console.log(error.response.status);\n                console.log(error.response.headers);\n              } else if (error.request) {\n                console.log(error.request);\n              } else {\n                console.log('Error', error.message);\n              }\n\n              dispatch({\n                type: MODULES_FAIL,\n                payload: error.response\n              });\n            }));\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  };\n};\nexport var getQuestions = function getQuestions(course_id) {\n  return function _callee2(dispatch) {\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            dispatch({\n              type: LOADING_QUESTIONS\n            });\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('uselfToken', function (error, value) {\n              if (error) {\n                console.log(error);\n              } else {\n                if (isEmpty(value)) {\n                  console.log(\"no token\");\n                } else {\n                  setAuthToken(value);\n                }\n              }\n            }));\n\n          case 3:\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(axios.get(QUESTIONS(course_id)).then(function (response) {\n              dispatch({\n                type: QUESTIONS_SUCCESS,\n                payload: response.data\n              });\n            }).catch(function (error) {\n              if (error.response) {\n                console.log(error.response.data.message);\n                console.log(error.response.status);\n                console.log(error.response.headers);\n              } else if (error.request) {\n                console.log(error.request);\n              } else {\n                console.log('Error', error.message);\n              }\n\n              dispatch({\n                type: QUESTIONS_FAIL\n              });\n            }));\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    });\n  };\n};\nexport var setCourseInfo = function setCourseInfo(course) {\n  return function _callee3(dispatch) {\n    return _regeneratorRuntime.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            dispatch({\n              type: COURSE_INFO,\n              payload: course\n            });\n\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    });\n  };\n};\nexport var resetLearning = function resetLearning() {\n  return function _callee4(dispatch) {\n    return _regeneratorRuntime.async(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            dispatch({\n              type: RESET_LEARNING\n            });\n\n          case 1:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    });\n  };\n};\nexport var updateStatus = function updateStatus(course_id) {\n  return function _callee5(dispatch) {\n    var config, body;\n    return _regeneratorRuntime.async(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('uselfToken', function (error, value) {\n              if (error) {\n                console.log(error);\n              } else {\n                if (isEmpty(value)) {\n                  console.log(\"no token\");\n                } else {\n                  setAuthToken(value);\n                }\n              }\n            }));\n\n          case 2:\n            config = {\n              headers: {\n                \"Content-Type\": \"application/json\"\n              }\n            };\n            body = JSON.stringify({\n              course_id: course_id\n            });\n            _context5.next = 6;\n            return _regeneratorRuntime.awrap(axios.put(UPDATE_STATUS, body, config).then(function (response) {\n              dispatch({\n                type: UPDATE_STATUS_SUCCESS\n              });\n              dispatch(getMyCourses());\n            }).catch(function (error) {\n              if (error.response) {\n                console.log(error.response.data.message);\n                console.log(error.response.status);\n                console.log(error.response.headers);\n              } else if (error.request) {\n                console.log(error.request);\n              } else {\n                console.log('Error', error.message);\n              }\n            }));\n\n          case 6:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    });\n  };\n};\nexport var updateAnswer = function updateAnswer(answer, question_id) {\n  return function _callee6(dispatch) {\n    var config, body;\n    return _regeneratorRuntime.async(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            dispatch({\n              type: LOADING_UPDATE_ANSWER\n            });\n            _context6.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('uselfToken', function (error, value) {\n              if (error) {\n                console.log(error);\n              } else {\n                if (isEmpty(value)) {\n                  console.log(\"no token\");\n                } else {\n                  setAuthToken(value);\n                }\n              }\n            }));\n\n          case 3:\n            config = {\n              headers: {\n                \"Content-Type\": \"application/json\"\n              }\n            };\n            body = JSON.stringify({\n              answer: answer\n            });\n            _context6.next = 7;\n            return _regeneratorRuntime.awrap(axios.put(VALIDATE_ANSWER(question_id), body, config).then(function (response) {\n              dispatch({\n                type: LOADING_UPDATE_ANSWER\n              });\n              dispatch({\n                type: UPDATE_ANSWER_SUCCESS\n              });\n              dispatch(getMyCourses());\n            }).catch(function (error) {\n              if (error.response) {\n                console.log(error.response.data.message);\n                console.log(error.response.status);\n                console.log(error.response.headers);\n              } else if (error.request) {\n                console.log(error.request);\n              } else {\n                console.log('Error', error.message);\n              }\n\n              dispatch({\n                type: UPDATE_ANSWER_FAIL\n              });\n            }));\n\n          case 7:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/Administrator/psm/screens/learning_module_screens/actions/learningActions.js"],"names":["axios","MODULES_SUCCESS","MODULES_FAIL","QUESTIONS_SUCCESS","QUESTIONS_FAIL","COURSE_INFO","RESET_LEARNING","UPDATE_STATUS_SUCCESS","UPDATE_ANSWER_SUCCESS","LOADING_UPDATE_ANSWER","UPDATE_ANSWER_FAIL","LOADING_QUESTIONS","LOADING_MODULES","MODULES","UPDATE_STATUS","QUESTIONS","VALIDATE_ANSWER","isEmpty","setAuthToken","AsyncStorage","getMyCourses","getModules","course_id","dispatch","type","getItem","error","value","console","log","get","then","response","payload","data","catch","message","status","headers","request","getQuestions","setCourseInfo","course","resetLearning","updateStatus","config","body","JSON","stringify","put","updateAnswer","answer","question_id"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport {\r\n    MODULES_SUCCESS,\r\n    MODULES_FAIL,\r\n    QUESTIONS_SUCCESS,\r\n    QUESTIONS_FAIL,\r\n    COURSE_INFO,\r\n    RESET_LEARNING,\r\n    UPDATE_STATUS_SUCCESS,\r\n    UPDATE_ANSWER_SUCCESS,\r\n    LOADING_UPDATE_ANSWER,\r\n    UPDATE_ANSWER_FAIL,\r\n    LOADING_QUESTIONS,\r\n    LOADING_MODULES\r\n  } from \"../../actions\";\r\nimport { MODULES,UPDATE_STATUS,QUESTIONS,VALIDATE_ANSWER} from \"../../../config/Config\";\r\nimport {isEmpty,setAuthToken} from \"../../../utils/index\"\r\nimport { AsyncStorage } from 'react-native';\r\nimport {getMyCourses} from '../../main_screens/actions/courseActions'\r\n\r\n\r\nexport const getModules = (course_id) => async dispatch => {\r\n    \r\n    dispatch({type:LOADING_MODULES})\r\n    //assign token as header\r\n    await AsyncStorage.getItem('uselfToken', (error,value) => {\r\n      if (error) { \r\n  \r\n        console.log(error)\r\n  \r\n      }else{\r\n  \r\n        if (isEmpty(value)){\r\n          console.log(\"no token\");\r\n        }else{\r\n          setAuthToken(value)\r\n          //console.log(value)\r\n  \r\n        }\r\n  \r\n      }\r\n  \r\n    });\r\n\r\n    await axios.get(MODULES(course_id)).then(response =>{\r\n\r\n      dispatch({\r\n  \r\n        type: MODULES_SUCCESS,\r\n        payload: response.data\r\n  \r\n      });\r\n  \r\n  \r\n    }).catch(error=>{\r\n  \r\n      if (error.response) {\r\n        // Request made and server responded\r\n        console.log(error.response.data.message);\r\n        console.log(error.response.status);\r\n        console.log(error.response.headers);\r\n      } else if (error.request) {\r\n        // The request was made but no response was received\r\n        console.log(error.request);\r\n      } else {\r\n        // Something happened in setting up the request that triggered an Error\r\n        console.log('Error', error.message);\r\n      }\r\n  \r\n      dispatch({\r\n  \r\n        type: MODULES_FAIL,\r\n        payload: error.response\r\n  \r\n      });\r\n    });\r\n    \r\n};\r\n\r\n\r\nexport const getQuestions = (course_id) => async dispatch => {\r\n  dispatch({type:LOADING_QUESTIONS})\r\n  \r\n  //assign token as header\r\n  await AsyncStorage.getItem('uselfToken', (error,value) => {\r\n    if (error) { \r\n\r\n      console.log(error)\r\n\r\n    }else{\r\n\r\n      if (isEmpty(value)){\r\n        console.log(\"no token\");\r\n      }else{\r\n        setAuthToken(value)\r\n        //console.log(value)\r\n\r\n      }\r\n\r\n    }\r\n\r\n  });\r\n\r\n  await axios.get(QUESTIONS(course_id)).then(response =>{\r\n\r\n    dispatch({\r\n\r\n      type: QUESTIONS_SUCCESS,\r\n      payload: response.data\r\n\r\n    });\r\n\r\n\r\n  }).catch(error=>{\r\n\r\n    if (error.response) {\r\n      // Request made and server responded\r\n      console.log(error.response.data.message);\r\n      console.log(error.response.status);\r\n      console.log(error.response.headers);\r\n    } else if (error.request) {\r\n      // The request was made but no response was received\r\n      console.log(error.request);\r\n    } else {\r\n      // Something happened in setting up the request that triggered an Error\r\n      console.log('Error', error.message);\r\n    }\r\n\r\n    dispatch({type:QUESTIONS_FAIL})\r\n\r\n  });\r\n  \r\n};\r\n\r\n\r\nexport const setCourseInfo = (course) => async dispatch => {\r\n  dispatch({\r\n\r\n      type: COURSE_INFO,\r\n      payload: course\r\n\r\n    });  \r\n}\r\n\r\nexport const resetLearning = () => async dispatch =>{\r\n  dispatch({type:RESET_LEARNING})\r\n}\r\n\r\nexport const updateStatus = (course_id) => async dispatch =>{\r\n      //assign token as header\r\n      await AsyncStorage.getItem('uselfToken', (error,value) => {\r\n        if (error) { \r\n    \r\n          console.log(error)\r\n    \r\n        }else{\r\n    \r\n          if (isEmpty(value)){\r\n            console.log(\"no token\");\r\n          }else{\r\n            setAuthToken(value)\r\n            //console.log(value)\r\n    \r\n          }\r\n    \r\n        }\r\n    \r\n      });\r\n      const config = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n      };\r\n    \r\n      const body = JSON.stringify({ \r\n        course_id: course_id\r\n      });\r\n      \r\n      await axios.put(UPDATE_STATUS, body, config).then(response =>{\r\n\r\n        dispatch({\r\n          type: UPDATE_STATUS_SUCCESS    \r\n        });\r\n\r\n        dispatch(getMyCourses())\r\n    \r\n    \r\n      }).catch(error=>{\r\n    \r\n        if (error.response) {\r\n          // Request made and server responded\r\n          console.log(error.response.data.message);\r\n          console.log(error.response.status);\r\n          console.log(error.response.headers);\r\n        } else if (error.request) {\r\n          // The request was made but no response was received\r\n          console.log(error.request);\r\n        } else {\r\n          // Something happened in setting up the request that triggered an Error\r\n          console.log('Error', error.message);\r\n        }\r\n      });\r\n\r\n    \r\n}\r\n\r\nexport const updateAnswer = (answer,question_id) => async dispatch =>{\r\n  \r\n  dispatch({type:LOADING_UPDATE_ANSWER})\r\n\r\n  //assign token as header\r\n  await AsyncStorage.getItem('uselfToken', (error,value) => {\r\n    if (error) { \r\n\r\n      console.log(error)\r\n\r\n    }else{\r\n\r\n      if (isEmpty(value)){\r\n        console.log(\"no token\");\r\n      }else{\r\n        setAuthToken(value)\r\n        //console.log(value)\r\n\r\n      }\r\n\r\n    }\r\n\r\n  });\r\n  const config = {\r\n    headers: {\r\n        \"Content-Type\": \"application/json\"\r\n    }\r\n  };\r\n\r\n  const body = JSON.stringify({ \r\n    answer: answer\r\n  });\r\n  \r\n  await axios.put(VALIDATE_ANSWER(question_id), body, config).then(response =>{\r\n\r\n    dispatch({type:LOADING_UPDATE_ANSWER})\r\n    dispatch({\r\n      type: UPDATE_ANSWER_SUCCESS    \r\n    });\r\n\r\n    dispatch(getMyCourses())\r\n  }).catch(error=>{\r\n\r\n    if (error.response) {\r\n      // Request made and server responded\r\n      console.log(error.response.data.message);\r\n      console.log(error.response.status);\r\n      console.log(error.response.headers);\r\n    } else if (error.request) {\r\n      // The request was made but no response was received\r\n      console.log(error.request);\r\n    } else {\r\n      // Something happened in setting up the request that triggered an Error\r\n      console.log('Error', error.message);\r\n    }\r\n    dispatch({type:UPDATE_ANSWER_FAIL})\r\n  });\r\n\r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}