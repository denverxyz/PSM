{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from \"axios\";\nimport { USER_ERROR, REGISTER_SUCCESS, REGISTER_FAIL, LOGIN_SUCCESS, LOGIN_FAIL, GET_USER, LOGOUT, UPDATE_USER_SUCCESS, UPDATE_USER_FAIL, LOADING_USER, RESET_COURSES, RESET_MYCOURSES, RESET_ENROLL, RESET_LEARNING, RESET_BADGES } from \"../../actions\";\nimport { USERS, AUTH } from \"../../../config/Config\";\nimport { setAuthToken, isEmpty } from \"../../../utils/index\";\n\nvar Buffer = require('buffer/').Buffer;\n\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport { getMyCourses } from \"../../main_screens/actions/courseActions\";\nimport { getBadges } from \"../../main_screens/actions/badgeAction\";\nexport var getCurrentUser = function getCurrentUser() {\n  return function _callee(dispatch) {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('uselfToken', function (error, value) {\n              if (error) {\n                console.log(error);\n              } else {\n                if (isEmpty(value)) {\n                  console.log(\"no token\");\n                } else {\n                  setAuthToken(value);\n                }\n              }\n            }));\n\n          case 2:\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(axios.get(USERS).then(function (response) {\n              dispatch({\n                type: GET_USER,\n                payload: response.data[0]\n              });\n            }).catch(function (error) {\n              if (error.response) {\n                console.log(error.response.data.message);\n                console.log(error.response.status);\n                console.log(error.response.headers);\n              } else if (error.request) {\n                console.log(error.request);\n              } else {\n                console.log('Error', error.message);\n              }\n\n              dispatch({\n                type: USER_ERROR,\n                payload: error.response.data.message\n              });\n            }));\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  };\n};\nexport var updateUser = function updateUser(formData) {\n  return function _callee2(dispatch) {\n    var config, body;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            dispatch({\n              type: LOADING_USER\n            });\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('uselfToken', function (error, value) {\n              if (error) {\n                console.log(error);\n              } else {\n                if (isEmpty(value)) {\n                  console.log(\"no token\");\n                } else {\n                  setAuthToken(value);\n                }\n              }\n            }));\n\n          case 3:\n            config = {\n              headers: {\n                \"Content-Type\": \"application/json\"\n              }\n            };\n            body = JSON.stringify({\n              phone: formData.phone,\n              address_number: formData.address_number,\n              address_street: formData.address_street,\n              address_city: formData.address_city,\n              address_postal_code: formData.address_postal_code,\n              address_state: formData.address_state\n            });\n            _context2.next = 7;\n            return _regeneratorRuntime.awrap(axios.put(USERS, body, config).then(function (response) {\n              dispatch(getCurrentUser());\n              dispatch({\n                type: UPDATE_USER_SUCCESS\n              });\n            }).catch(function (error) {\n              if (error.response) {\n                console.log(error.response.data.message);\n                console.log(error.response.status);\n                console.log(error.response.headers);\n              } else if (error.request) {\n                console.log(error.request);\n              } else {\n                console.log('Error', error.message);\n              }\n\n              dispatch({\n                type: UPDATE_USER_FAIL,\n                payload: error.response\n              });\n            }));\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    });\n  };\n};\nexport var signUp = function signUp(formData) {\n  return function _callee3(dispatch) {\n    var config, body;\n    return _regeneratorRuntime.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            config = {\n              headers: {\n                \"Content-Type\": \"application/json\"\n              }\n            };\n            body = JSON.stringify({\n              first_name: formData.first_name,\n              last_name: formData.last_name,\n              email: formData.email,\n              password: formData.password,\n              phone: formData.phone,\n              date_of_birth: formData.date_of_birth,\n              address_number: formData.address_number,\n              address_street: formData.address_street,\n              address_city: formData.address_city,\n              address_postal_code: formData.address_postal_code,\n              address_state: formData.address_state\n            });\n            _context3.next = 4;\n            return _regeneratorRuntime.awrap(axios.post(USERS, body, config).then(function (response) {\n              dispatch({\n                type: REGISTER_SUCCESS\n              });\n              dispatch(login(formData.email, formData.password));\n            }).catch(function (error) {\n              if (error.response) {\n                console.log(error.response.data.message);\n                console.log(error.response.status);\n                console.log(error.response.headers);\n              } else if (error.request) {\n                console.log(error.request);\n              } else {\n                console.log('Error', error.message);\n              }\n\n              dispatch({\n                type: REGISTER_FAIL,\n                payload: error.response.data.message\n              });\n            }));\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    });\n  };\n};\nexport var login = function login(username, password) {\n  return function _callee4(dispatch) {\n    var basicAuth, config;\n    return _regeneratorRuntime.async(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            basicAuth = 'Basic ' + Buffer.from(username + \":\" + password).toString('base64');\n            config = {\n              headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": basicAuth\n              }\n            };\n            _context4.next = 4;\n            return _regeneratorRuntime.awrap(axios.post(AUTH, {}, config).then(function (response) {\n              dispatch({\n                type: LOGIN_SUCCESS,\n                payload: response.data\n              });\n              dispatch(getCurrentUser());\n              dispatch(getMyCourses());\n              dispatch(getBadges());\n            }).catch(function (error) {\n              if (error.response) {\n                console.log(error.response.data.message);\n                console.log(error.response.status);\n                console.log(error.response.headers);\n              } else if (error.request) {\n                console.log(error.request);\n              } else {\n                console.log('Error', error.message);\n              }\n\n              dispatch({\n                type: LOGIN_FAIL,\n                payload: error.response.data.message\n              });\n            }));\n\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    });\n  };\n};\nexport var logOut = function logOut() {\n  return function (dispatch) {\n    dispatch({\n      type: LOGOUT\n    });\n    dispatch({\n      type: RESET_MYCOURSES\n    });\n    dispatch({\n      type: RESET_COURSES\n    });\n    dispatch({\n      type: RESET_ENROLL\n    });\n    dispatch({\n      type: RESET_LEARNING\n    });\n    dispatch({\n      type: RESET_BADGES\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/Administrator/psm/screens/auth_screens/actions/authActions.js"],"names":["axios","USER_ERROR","REGISTER_SUCCESS","REGISTER_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","GET_USER","LOGOUT","UPDATE_USER_SUCCESS","UPDATE_USER_FAIL","LOADING_USER","RESET_COURSES","RESET_MYCOURSES","RESET_ENROLL","RESET_LEARNING","RESET_BADGES","USERS","AUTH","setAuthToken","isEmpty","Buffer","require","AsyncStorage","getMyCourses","getBadges","getCurrentUser","dispatch","getItem","error","value","console","log","get","then","response","type","payload","data","catch","message","status","headers","request","updateUser","formData","config","body","JSON","stringify","phone","address_number","address_street","address_city","address_postal_code","address_state","put","signUp","first_name","last_name","email","password","date_of_birth","post","login","username","basicAuth","from","toString","logOut"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport {\r\n    USER_ERROR,\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    GET_USER,\r\n    LOGOUT,\r\n    UPDATE_USER_SUCCESS,\r\n    UPDATE_USER_FAIL,\r\n    LOADING_USER,\r\n    RESET_COURSES,\r\n    RESET_MYCOURSES,\r\n    RESET_ENROLL,\r\n    RESET_LEARNING,\r\n    RESET_BADGES\r\n  } from \"../../actions\";\r\nimport { USERS, AUTH } from \"../../../config/Config\";\r\nimport { setAuthToken, isEmpty } from \"../../../utils/index\";\r\nvar Buffer = require('buffer/').Buffer;\r\nimport { AsyncStorage } from 'react-native';\r\nimport { getMyCourses } from \"../../main_screens/actions/courseActions\";\r\nimport { getBadges } from \"../../main_screens/actions/badgeAction\";\r\n\r\n\r\nexport const getCurrentUser = () => async dispatch => {\r\n  //assign token as header\r\n  await AsyncStorage.getItem('uselfToken', (error,value) => {\r\n    if (error) { \r\n\r\n      console.log(error)\r\n\r\n    }else{\r\n\r\n      if (isEmpty(value)){\r\n        console.log(\"no token\");\r\n      }else{\r\n        setAuthToken(value)\r\n        //console.log(value)\r\n\r\n      }\r\n\r\n    }\r\n\r\n  });\r\n\r\n  await axios.get(USERS).then(response =>{\r\n    dispatch({\r\n\r\n      type: GET_USER,\r\n      payload: response.data[0]\r\n\r\n    });\r\n\r\n\r\n  }).catch(error=>{\r\n\r\n    if (error.response) {\r\n      // Request made and server responded\r\n      console.log(error.response.data.message);\r\n      console.log(error.response.status);\r\n      console.log(error.response.headers);\r\n    } else if (error.request) {\r\n      // The request was made but no response was received\r\n      console.log(error.request);\r\n    } else {\r\n      // Something happened in setting up the request that triggered an Error\r\n      console.log('Error', error.message);\r\n    }\r\n\r\n    dispatch({\r\n\r\n      type: USER_ERROR,\r\n      payload: error.response.data.message\r\n\r\n    });\r\n  });\r\n  \r\n};\r\n\r\nexport const updateUser = (formData) => async dispatch =>{\r\n  dispatch({type:LOADING_USER})\r\n  //assign token as header\r\n  await AsyncStorage.getItem('uselfToken', (error,value) => {\r\n    if (error) { \r\n\r\n      console.log(error)\r\n\r\n    }else{\r\n\r\n      if (isEmpty(value)){\r\n        console.log(\"no token\");\r\n      }else{\r\n        setAuthToken(value)\r\n        //console.log(value)\r\n\r\n      }\r\n\r\n    }\r\n\r\n  });\r\n\r\n  const config = {\r\n    headers: {\r\n        \"Content-Type\": \"application/json\"\r\n    }\r\n  };\r\n\r\n  const body = JSON.stringify({ \r\n    phone : formData.phone,\r\n    address_number : formData.address_number,\r\n    address_street : formData.address_street,\r\n    address_city : formData.address_city,\r\n    address_postal_code : formData.address_postal_code,\r\n    address_state : formData.address_state  \r\n  });\r\n\r\n  await axios.put(USERS, body, config).then(response =>{\r\n\r\n    dispatch(getCurrentUser())\r\n\r\n    dispatch({\r\n      type: UPDATE_USER_SUCCESS,\r\n    });\r\n\r\n\r\n  }).catch(error=>{\r\n\r\n    if (error.response) {\r\n      // Request made and server responded\r\n      console.log(error.response.data.message);\r\n      console.log(error.response.status);\r\n      console.log(error.response.headers);\r\n    } else if (error.request) {\r\n      // The request was made but no response was received\r\n      console.log(error.request);\r\n    } else {\r\n      // Something happened in setting up the request that triggered an Error\r\n      console.log('Error', error.message);\r\n    }\r\n\r\n    dispatch({\r\n      type: UPDATE_USER_FAIL,\r\n      payload: error.response\r\n    });\r\n\r\n  })\r\n}\r\n\r\nexport const signUp = (formData) => async dispatch => {\r\n\r\n  const config = {\r\n    headers: {\r\n        \"Content-Type\": \"application/json\"\r\n    }\r\n  };\r\n\r\n  const body = JSON.stringify({ \r\n    first_name : formData.first_name,\r\n    last_name : formData.last_name, \r\n    email : formData.email,\r\n    password : formData.password,\r\n    phone : formData.phone,\r\n    date_of_birth : formData.date_of_birth,\r\n    address_number : formData.address_number,\r\n    address_street : formData.address_street,\r\n    address_city : formData.address_city,\r\n    address_postal_code : formData.address_postal_code,\r\n    address_state : formData.address_state  \r\n  });\r\n  \r\n  await axios.post(USERS, body, config).then(response =>{\r\n\r\n    dispatch({\r\n      type: REGISTER_SUCCESS,\r\n    });\r\n    dispatch(login(formData.email,formData.password))\r\n\r\n\r\n\r\n  }).catch(error=>{\r\n\r\n    if (error.response) {\r\n      // Request made and server responded\r\n      console.log(error.response.data.message);\r\n      console.log(error.response.status);\r\n      console.log(error.response.headers);\r\n    } else if (error.request) {\r\n      // The request was made but no response was received\r\n      console.log(error.request);\r\n    } else {\r\n      // Something happened in setting up the request that triggered an Error\r\n      console.log('Error', error.message);\r\n    }\r\n\r\n    dispatch({\r\n      type: REGISTER_FAIL,\r\n      payload: error.response.data.message\r\n    });\r\n\r\n  })\r\n \r\n};\r\n\r\n\r\n// Load token\r\nexport const login = (username,password) => async (dispatch) => {\r\n  var basicAuth = 'Basic ' + Buffer.from(`${username}:${password}`).toString('base64');\r\n\r\n  const config = {\r\n    headers: {\r\n\r\n      \"Content-Type\": \"application/json\",\r\n      \"Authorization\": basicAuth\r\n\r\n    }\r\n  };\r\n\r\n  await axios.post(AUTH,{},config).then((response)=>{\r\n    dispatch({\r\n\r\n      type: LOGIN_SUCCESS,\r\n      payload: response.data\r\n\r\n    });\r\n    // console.log(response.data.token);\r\n\r\n    dispatch(getCurrentUser());\r\n    dispatch(getMyCourses());\r\n    dispatch(getBadges())\r\n  }).catch((error)=> {\r\n\r\n    if (error.response) {\r\n      // Request made and server responded\r\n      console.log(error.response.data.message);\r\n      console.log(error.response.status);\r\n      console.log(error.response.headers);\r\n    } else if (error.request) {\r\n      // The request was made but no response was received\r\n      console.log(error.request);\r\n    } else {\r\n      // Something happened in setting up the request that triggered an Error\r\n      console.log('Error', error.message);\r\n    }\r\n\r\n    dispatch({\r\n      type: LOGIN_FAIL,\r\n      payload: error.response.data.message\r\n\r\n    });\r\n\r\n  })\r\n\r\n};\r\n\r\n\r\n\r\nexport const logOut = () => dispatch => {\r\n  dispatch({\r\n    type: LOGOUT\r\n  });\r\n  dispatch({\r\n    type: RESET_MYCOURSES\r\n  });\r\n  dispatch({\r\n    type:RESET_COURSES\r\n  })\r\n  dispatch({\r\n    type: RESET_ENROLL\r\n  })\r\n  dispatch({\r\n    type: RESET_LEARNING\r\n  })\r\n  dispatch(\r\n    {type:RESET_BADGES}\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}