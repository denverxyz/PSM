{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\psm\\\\components\\\\CourseScreen\\\\MyCoursesCards.js\";\nimport { Rating } from 'react-native-ratings';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Card, Button } from 'react-native-elements';\nimport { NavigationActions } from 'react-navigation';\nimport { connect } from \"react-redux\";\nimport { writeBadge } from \"../../screens/main_screens/actions/badgeAction\";\n\nfunction MyCoursesCards(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation,\n      my_courses = _ref.my_courses,\n      writeBadge = _ref.writeBadge,\n      loading = _ref.loading,\n      user = _ref.user;\n\n  var navigateAction = function navigateAction(course) {\n    return NavigationActions.navigate({\n      routeName: 'Learning',\n      params: {\n        course: course\n      },\n      action: NavigationActions.navigate({\n        routeName: 'MyCourse',\n        params: {\n          course: course\n        }\n      })\n    });\n  };\n\n  var badgeRequest = function badgeRequest(course) {\n    writeBadge(course.course_id, user.id);\n  };\n\n  var CourseCardLists = my_courses.map(function (course, index) {\n    return React.createElement(Card, {\n      containerStyle: styles.card,\n      key: course.course_id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      }\n    }, React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        navigation.dispatch(navigateAction(course));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      }\n    }, React.createElement(View, {\n      style: styles.containerMain,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      }\n    }, React.createElement(View, {\n      style: styles.container,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      }\n    }, React.createElement(Image, {\n      size: \"medium\",\n      source: {\n        uri: course.image\n      },\n      style: {\n        width: 120,\n        height: 70\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      }\n    }), React.createElement(View, {\n      style: styles.container2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      }\n    }, React.createElement(Text, {\n      style: styles.textTitle,\n      numberOfLines: 1,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      }\n    }, course.course_name), React.createElement(Text, {\n      style: styles.textAuthor,\n      numberOfLines: 1,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      }\n    }, course.instructor_first_name + \" \" + course.instructor_last_name), React.createElement(View, {\n      style: styles.container3,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      }\n    }, React.createElement(Rating, {\n      imageSize: 20,\n      type: \"custom\",\n      readonly: true,\n      style: styles.rating,\n      startingValue: course.rating,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      }\n    }), React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      }\n    }, \"(\" + course.rating + \")\")), React.createElement(Text, {\n      style: styles.textPrice,\n      numberOfLines: 1,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      }\n    }, course.status))), course.status === 'COMPLETE' ? React.createElement(Button, {\n      titleStyle: styles.badgeButtonTitle,\n      buttonStyle: styles.badgeButton,\n      disabled: loading,\n      disabledStyle: styles.badgeButton,\n      disabledTitleStyle: styles.badgeButtonTitle,\n      loading: loading,\n      onPress: function onPress() {\n        badgeRequest(course);\n      },\n      title: \"Get My Badge\",\n      type: \"solid\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      }\n    }) : null)));\n  });\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    }\n  }, CourseCardLists);\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    loading: state.badge.loading,\n    user: state.auth.user\n  };\n};\n\nvar mapDispatchToProps = {\n  writeBadge: writeBadge\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(MyCoursesCards);\nvar styles = StyleSheet.create({\n  wrapContainer: {\n    alignSelf: 'center',\n    flexDirection: 'row',\n    flexWrap: 'wrap'\n  },\n  containerMain: {\n    flex: 1,\n    padding: 20\n  },\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    flexDirection: 'row'\n  },\n  card: {\n    flex: 1,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.2,\n    shadowRadius: 4,\n    elevation: 3,\n    padding: 0,\n    borderRadius: 10,\n    marginBottom: 10\n  },\n  container2: {\n    flex: 1,\n    marginLeft: 20\n  },\n  container3: {\n    alignItems: \"center\",\n    flexDirection: 'row'\n  },\n  rating: {\n    alignItems: \"flex-start\",\n    left: 0,\n    marginTop: 5,\n    marginBottom: 5,\n    marginRight: 10\n  },\n  textTitle: {\n    fontSize: 15,\n    fontWeight: '500'\n  },\n  textAuthor: {\n    fontSize: 14,\n    fontWeight: '300'\n  },\n  textPrice: {\n    fontSize: 15,\n    fontWeight: '500'\n  },\n  badgeButton: {\n    marginTop: 15,\n    backgroundColor: '#3CB371',\n    height: 40,\n    width: '100%',\n    right: 0,\n    justifyContent: \"center\",\n    borderRadius: 5\n  },\n  badgeButtonTitle: {\n    fontSize: 14,\n    fontWeight: \"bold\"\n  }\n});","map":{"version":3,"sources":["C:/Users/Administrator/psm/components/CourseScreen/MyCoursesCards.js"],"names":["Rating","React","Card","Button","NavigationActions","connect","writeBadge","MyCoursesCards","navigation","my_courses","loading","user","navigateAction","course","navigate","routeName","params","action","badgeRequest","course_id","id","CourseCardLists","map","index","styles","card","dispatch","containerMain","container","uri","image","width","height","container2","textTitle","course_name","textAuthor","instructor_first_name","instructor_last_name","container3","rating","textPrice","status","badgeButtonTitle","badgeButton","mapStateToProps","state","badge","auth","mapDispatchToProps","StyleSheet","create","wrapContainer","alignSelf","flexDirection","flexWrap","flex","padding","alignItems","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","borderRadius","marginBottom","marginLeft","left","marginTop","marginRight","fontSize","fontWeight","backgroundColor","right","justifyContent"],"mappings":"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","sourcesContent":["import { Rating } from 'react-native-ratings';\r\nimport React from 'react';\r\nimport { StyleSheet,View,Text,Image,TouchableOpacity } from 'react-native';\r\nimport { Card,Button } from 'react-native-elements';\r\nimport { NavigationActions } from 'react-navigation';\r\nimport { connect } from \"react-redux\";\r\nimport {writeBadge} from \"../../screens/main_screens/actions/badgeAction\";\r\n\r\nfunction MyCoursesCards({navigation,my_courses,writeBadge,loading,user}) {\r\n\r\n    const navigateAction = (course) => NavigationActions.navigate({\r\n        routeName: 'Learning',\r\n        params: {\r\n            course: course\r\n        },\r\n        action: NavigationActions.navigate({ routeName: 'MyCourse',params: {\r\n            course: course\r\n        }, }),\r\n      });\r\n\r\n    const badgeRequest = (course) => {\r\n\r\n        writeBadge(\r\n            course.course_id,\r\n            user.id\r\n        )\r\n\r\n\r\n\r\n    }\r\n\r\n    const CourseCardLists = my_courses.map((course,index) => (\r\n        <Card containerStyle={styles.card} key={course.course_id} >\r\n        <TouchableOpacity \r\n             onPress={() => {\r\n                navigation.dispatch(navigateAction(course))}\r\n                }>\r\n        <View style={styles.containerMain}>            \r\n        <View style={styles.container}>\r\n    \r\n                <Image\r\n                    size=\"medium\"\r\n                    source={{uri:course.image}}\r\n                    style={{width: 120, height: 70}}\r\n                />\r\n                <View style={styles.container2}>\r\n\r\n                    <Text style={styles.textTitle} numberOfLines={1}>{course.course_name}</Text>\r\n                    <Text style={styles.textAuthor} numberOfLines={1}>{`${course.instructor_first_name} ${course.instructor_last_name}`}</Text>\r\n                                \r\n                    <View style={styles.container3}>\r\n                    <Rating\r\n                        imageSize={20}\r\n                        type='custom'\r\n                        readonly\r\n                        style={styles.rating}\r\n                        startingValue={course.rating}\r\n                    /><Text>{`(${course.rating})`}</Text>\r\n                    </View>\r\n\r\n\r\n                    <Text style={styles.textPrice} numberOfLines={1}>{course.status}</Text>\r\n\r\n                </View>\r\n\r\n        </View>  \r\n        {course.status === 'COMPLETE' ?\r\n            <Button\r\n            titleStyle={styles.badgeButtonTitle}\r\n            buttonStyle={styles.badgeButton}\r\n            disabled = {loading}\r\n            disabledStyle={styles.badgeButton}\r\n            disabledTitleStyle={styles.badgeButtonTitle}\r\n            loading = {loading}\r\n            onPress={()=>{badgeRequest(course)}}\r\n            title=\"Get My Badge\"\r\n            type=\"solid\" /> :null\r\n\r\n        } \r\n        </View>\r\n        </TouchableOpacity>\r\n        </Card>\r\n    ))\r\n\r\n\r\n    return (<View>\r\n                {CourseCardLists}\r\n            </View>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    loading: state.badge.loading,\r\n    user: state.auth.user  \r\n});\r\n  \r\nconst mapDispatchToProps = {\r\n    writeBadge\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(MyCoursesCards);\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    wrapContainer: {\r\n        alignSelf: 'center',\r\n        flexDirection: 'row',\r\n        flexWrap: 'wrap'    },\r\n\r\n    containerMain:{\r\n        flex: 1, \r\n        padding : 20\r\n    },\r\n    container:{\r\n        flex: 1, \r\n        alignItems: \"center\",\r\n        flexDirection: 'row',\r\n    },\r\n    card:{\r\n        flex: 1, \r\n        shadowColor: '#000',\r\n        shadowOffset: { width: 0, height: 2},\r\n        shadowOpacity: 0.2,\r\n        shadowRadius: 4,  \r\n        elevation: 3,\r\n        padding: 0,\r\n        borderRadius: 10,\r\n        marginBottom:10\r\n    },\r\n    container2:{\r\n        flex: 1,\r\n        marginLeft:20\r\n    },\r\n    container3:{\r\n        alignItems: \"center\",                                       \r\n        flexDirection: 'row',\r\n\r\n    },\r\n    rating:{\r\n        alignItems: \"flex-start\",\r\n        left: 0,\r\n        marginTop: 5,\r\n        marginBottom: 5,\r\n        marginRight: 10\r\n\r\n    },\r\n    textTitle:{\r\n        fontSize: 15,\r\n        fontWeight: '500',\r\n        \r\n    },\r\n    textAuthor:{\r\n        fontSize: 14,\r\n        fontWeight: '300'\r\n    },\r\n    textPrice:{\r\n        fontSize: 15,\r\n        fontWeight: '500'\r\n    },\r\n    badgeButton:{\r\n        marginTop: 15,\r\n        backgroundColor:'#3CB371',\r\n        height: 40,\r\n        width: '100%',\r\n        right: 0,\r\n        justifyContent:\"center\",\r\n        borderRadius: 5       \r\n    \r\n      },\r\n    \r\n      badgeButtonTitle:{\r\n        fontSize: 14,\r\n        fontWeight:\"bold\"\r\n      },\r\n\r\n\r\n})"]},"metadata":{},"sourceType":"module"}