{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\psm\\\\screens\\\\main_screens\\\\HomeScreen\\\\PaymentScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Rating } from 'react-native-ratings';\nimport { Card, Button } from 'react-native-elements';\nimport { TextInput } from 'react-native-paper';\nimport { connect } from \"react-redux\";\nimport Header from \"../../../components/Header\";\nimport PaymentHeader from \"../../../components/HomeScreen/PaymentHeader\";\nimport BackButton from \"../../../components/BackButton\";\nimport { isEmpty } from \"../../../utils/index\";\nimport { enrollCourse, enrollReset } from \"../actions/paymentActions\";\nimport { Divider } from 'react-native-paper';\nimport Icon from \"@expo/vector-icons/FontAwesome5\";\n\nvar PaymentScreen = function PaymentScreen(_ref) {\n  var navigation = _ref.navigation,\n      user = _ref.user,\n      enrollCourse = _ref.enrollCourse,\n      enrollReset = _ref.enrollReset,\n      enroll_success = _ref.enroll_success,\n      enroll_error = _ref.enroll_error;\n\n  var _useState = useState(navigation.getParam('course')),\n      _useState2 = _slicedToArray(_useState, 2),\n      course = _useState2[0],\n      setCourse = _useState2[1];\n\n  var _useState3 = useState({\n    card_number: \"\",\n    first_name: !isEmpty(user) ? user.first_name : \"\",\n    last_name: !isEmpty(user) ? user.last_name : \"\",\n    email: !isEmpty(user) ? user.email : \"\",\n    phone: !isEmpty(user) ? user.phone : \"\",\n    address_number: !isEmpty(user) ? user.address_number : \"\",\n    address_street: !isEmpty(user) ? user.address_street : \"\",\n    address_city: !isEmpty(user) ? user.address_city : \"\",\n    address_postal_code: !isEmpty(user) ? user.address_postal_code : \"\",\n    address_state: !isEmpty(user) ? user.address_state : \"\"\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      formData = _useState4[0],\n      setFormData = _useState4[1];\n\n  var card_number = formData.card_number,\n      first_name = formData.first_name,\n      last_name = formData.last_name,\n      email = formData.email,\n      phone = formData.phone,\n      address_street = formData.address_street,\n      address_city = formData.address_city,\n      address_postal_code = formData.address_postal_code;\n\n  var onChange = function onChange(inputName, value) {\n    setFormData(_objectSpread({}, formData, _defineProperty({}, inputName, value)));\n  };\n\n  useEffect(function () {\n    if (!isEmpty(enroll_success)) {\n      Alert.alert('', enroll_success, [{\n        text: 'OK',\n        onPress: function onPress() {\n          enrollReset();\n          navigation.goBack(null);\n        }\n      }], {\n        cancelable: false\n      });\n    } else if (!isEmpty(enroll_error)) {\n      Alert.alert('', enroll_error, [{\n        text: 'OK',\n        onPress: function onPress() {\n          enrollReset();\n          navigation.goBack(null);\n        }\n      }], {\n        cancelable: false\n      });\n    }\n  });\n\n  var enroll = function enroll() {\n    enrollCourse(course.id);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    }\n  }, React.createElement(ScrollView, {\n    showsVerticalScrollIndicator: false,\n    style: styles.container,\n    contentContainerStyle: styles.contentContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    }\n  }, React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    }\n  }, React.createElement(View, {\n    style: styles.containerCard,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    }\n  }, React.createElement(Image, {\n    size: \"medium\",\n    source: {\n      uri: course.image\n    },\n    style: {\n      width: 120,\n      height: 70\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    }\n  }), React.createElement(View, {\n    style: styles.container2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    }\n  }, React.createElement(Text, {\n    style: styles.textTitle,\n    numberOfLines: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    }\n  }, course.course_name), React.createElement(Text, {\n    style: styles.textAuthor,\n    numberOfLines: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    }\n  }, course.instructor_first_name + \" \" + course.instructor_last_name), React.createElement(View, {\n    style: styles.container3,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    }\n  }, React.createElement(Rating, {\n    imageSize: 20,\n    type: \"custom\",\n    readonly: true,\n    style: styles.rating,\n    startingValue: course.rating,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    }\n  }), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    }\n  }, \"(\" + course.rating + \")\")), React.createElement(Text, {\n    style: styles.textPrice,\n    numberOfLines: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    }\n  }, \"RM \" + course.price)))), React.createElement(Card, {\n    containerStyle: {\n      marginBottom: 20\n    },\n    title: \"Billing Information\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    }\n  }, React.createElement(TextInput, {\n    style: styles.textinput,\n    label: \"Credit/Debit Card\",\n    mode: \"outlined\",\n    theme: themetextinput,\n    value: card_number,\n    onChangeText: function onChangeText(value) {\n      return onChange('card_number', value);\n    },\n    keyboardType: 'numeric',\n    maxLength: 16,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    }\n  }), React.createElement(TextInput, {\n    style: styles.textinput,\n    label: \"First Name\",\n    mode: \"outlined\",\n    theme: themetextinput,\n    value: first_name,\n    onChangeText: function onChangeText(value) {\n      return onChange('first_name', value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    }\n  }), React.createElement(TextInput, {\n    style: styles.textinput,\n    label: \"Last Name\",\n    mode: \"outlined\",\n    theme: themetextinput,\n    value: last_name,\n    onChangeText: function onChangeText(value) {\n      return onChange('last_name', value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    }\n  }), React.createElement(TextInput, {\n    style: styles.textinput,\n    label: \"Email\",\n    mode: \"outlined\",\n    theme: themetextinput,\n    value: email,\n    onChangeText: function onChangeText(value) {\n      return onChange('email', value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    }\n  }), React.createElement(TextInput, {\n    style: styles.textinput,\n    label: \"Phone Number\",\n    mode: \"outlined\",\n    theme: themetextinput,\n    value: phone,\n    onChangeText: function onChangeText(value) {\n      return onChange('phone', value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    }\n  }), React.createElement(TextInput, {\n    style: styles.textinput,\n    label: \"Address Street\",\n    mode: \"outlined\",\n    theme: themetextinput,\n    value: address_street,\n    onChangeText: function onChangeText(value) {\n      return onChange('address_street', value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    }\n  }), React.createElement(TextInput, {\n    style: styles.textinput,\n    label: \"City\",\n    mode: \"outlined\",\n    theme: themetextinput,\n    value: address_city,\n    onChangeText: function onChangeText(value) {\n      return onChange('address_city', value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    }\n  }), React.createElement(TextInput, {\n    style: styles.textinput,\n    label: \"Postal Code\",\n    mode: \"outlined\",\n    theme: themetextinput,\n    value: address_postal_code,\n    onChangeText: function onChangeText(value) {\n      return onChange('address_postal_code', value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    }\n  }), React.createElement(Button, {\n    titleStyle: styles.blueButtonTitle,\n    buttonStyle: styles.blueButton,\n    onPress: enroll,\n    title: 'Confirm & Pay',\n    type: \"solid\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    }\n  }))));\n};\n\nPaymentScreen.navigationOptions = function (screenProps) {\n  return {\n    headerBackground: function headerBackground() {\n      return React.createElement(Header, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        }\n      });\n    },\n    headerTitleStyle: {\n      fontWeight: '100'\n    },\n    headerTintColor: '#fff',\n    headerTitle: function headerTitle() {\n      return React.createElement(PaymentHeader, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        }\n      });\n    },\n    headerLeft: function headerLeft() {\n      return BackButton(screenProps);\n    },\n    headerStyle: {\n      height: 70\n    }\n  };\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: state.auth.user,\n    enroll_error: state.payment.errors,\n    enroll_success: state.payment.enroll_message\n  };\n};\n\nvar mapDispatchToProps = {\n  enrollCourse: enrollCourse,\n  enrollReset: enrollReset\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(PaymentScreen);\nvar themetextinput = {\n  roundness: 5,\n  colors: {\n    background: '#FDFEFE',\n    placeholder: 'black',\n    text: 'black',\n    primary: '#1E90FF'\n  }\n};\nvar styles = StyleSheet.create({\n  wrapContainer: {\n    alignSelf: 'center',\n    flexDirection: 'row',\n    flexWrap: 'wrap'\n  },\n  containerCard: {\n    flex: 1,\n    alignItems: \"center\",\n    flexDirection: 'row',\n    padding: 20\n  },\n  textinput: {\n    height: 50,\n    fontSize: 13,\n    marginBottom: 8\n  },\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  contentContainer: {\n    paddingTop: 50\n  },\n  container2: {\n    flex: 1,\n    marginLeft: 20\n  },\n  container3: {\n    alignItems: \"center\",\n    flexDirection: 'row'\n  },\n  rating: {\n    alignItems: \"flex-start\",\n    left: 0,\n    marginTop: 5,\n    marginBottom: 5,\n    marginRight: 10\n  },\n  textTitle: {\n    fontSize: 15,\n    fontWeight: '500'\n  },\n  textAuthor: {\n    fontSize: 14,\n    fontWeight: '300'\n  },\n  textPrice: {\n    fontSize: 15,\n    fontWeight: '500'\n  },\n  blueButton: {\n    backgroundColor: '#1E90FF',\n    height: 45,\n    justifyContent: \"center\",\n    marginTop: 5,\n    borderRadius: 5\n  },\n  blueButtonTitle: {\n    fontSize: 16\n  }\n});","map":{"version":3,"sources":["C:/Users/Administrator/psm/screens/main_screens/HomeScreen/PaymentScreen.js"],"names":["React","useState","useEffect","Rating","Card","Button","TextInput","connect","Header","PaymentHeader","BackButton","isEmpty","enrollCourse","enrollReset","Divider","Icon","PaymentScreen","navigation","user","enroll_success","enroll_error","getParam","course","setCourse","card_number","first_name","last_name","email","phone","address_number","address_street","address_city","address_postal_code","address_state","formData","setFormData","onChange","inputName","value","Alert","alert","text","onPress","goBack","cancelable","enroll","id","styles","container","contentContainer","containerCard","uri","image","width","height","container2","textTitle","course_name","textAuthor","instructor_first_name","instructor_last_name","container3","rating","textPrice","price","marginBottom","textinput","themetextinput","blueButtonTitle","blueButton","navigationOptions","screenProps","headerBackground","headerTitleStyle","fontWeight","headerTintColor","headerTitle","headerLeft","headerStyle","mapStateToProps","state","auth","payment","errors","enroll_message","mapDispatchToProps","roundness","colors","background","placeholder","primary","StyleSheet","create","wrapContainer","alignSelf","flexDirection","flexWrap","flex","alignItems","padding","fontSize","backgroundColor","paddingTop","marginLeft","left","marginTop","marginRight","justifyContent","borderRadius"],"mappings":"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","sourcesContent":["import React,{useState, useEffect} from 'react';\r\nimport {\r\n  ScrollView,\r\n  StyleSheet,\r\n  View,\r\n  Text,\r\n  Image, Alert\r\n} from 'react-native';\r\nimport { Rating } from 'react-native-ratings';\r\nimport {Card,Button} from 'react-native-elements'\r\nimport { TextInput} from 'react-native-paper';\r\nimport { connect } from \"react-redux\";\r\nimport Header from '../../../components/Header'\r\nimport PaymentHeader from '../../../components/HomeScreen/PaymentHeader'\r\nimport BackButton from '../../../components/BackButton'\r\nimport {isEmpty} from '../../../utils/index';\r\nimport {enrollCourse , enrollReset} from '../actions/paymentActions';\r\nimport { Divider } from 'react-native-paper';\r\nimport Icon from 'react-native-vector-icons/FontAwesome5';\r\n\r\n\r\nconst PaymentScreen = ({navigation,user,enrollCourse,enrollReset,enroll_success,enroll_error}) => {\r\n\r\n    const [course,setCourse] =useState(navigation.getParam('course'))\r\n    const [formData, setFormData] = useState({\r\n        card_number:\"\",\r\n        first_name: ((!isEmpty(user))?user.first_name:\"\"),\r\n        last_name: ((!isEmpty(user))?user.last_name:\"\"),\r\n        email: ((!isEmpty(user))?user.email:\"\"),\r\n        phone: ((!isEmpty(user))?user.phone:\"\"),\r\n        address_number:!isEmpty(user)?user.address_number:\"\",\r\n        address_street:!isEmpty(user)?user.address_street:\"\",\r\n        address_city:!isEmpty(user)?user.address_city:\"\",\r\n        address_postal_code:!isEmpty(user)?user.address_postal_code:\"\",\r\n        address_state:!isEmpty(user)?user.address_state:\"\"\r\n        });\r\n\r\n        const { \r\n            card_number,\r\n            first_name,\r\n            last_name,\r\n            email,\r\n            phone, \r\n            address_street,\r\n            address_city,\r\n            address_postal_code,\r\n          } = formData;\r\n\r\n    const onChange = (inputName,value) =>{\r\n        setFormData({ ...formData, [inputName]: value });\r\n    \r\n      }\r\n    useEffect(\r\n        () => {\r\n            if(!isEmpty(enroll_success)){\r\n\r\n                //Alert.alert(enroll_message)\r\n                Alert.alert(\r\n                    '',\r\n                    enroll_success, \r\n                    [\r\n                        {text: 'OK', onPress: () => {enrollReset();navigation.goBack(null);}},\r\n                    ],\r\n                    {cancelable: false},\r\n                  );\r\n    \r\n            }else if(!isEmpty(enroll_error)){\r\n                Alert.alert(\r\n                    '',\r\n                    enroll_error,\r\n                    [\r\n                      {text: 'OK', onPress: () => {enrollReset();navigation.goBack(null);}},\r\n                    ],\r\n                    {cancelable: false},\r\n                  );\r\n    \r\n            }\r\n        }\r\n    )\r\n    const enroll =()=>{\r\n        enrollCourse(course.id)\r\n    }\r\n\r\n    return(\r\n        <View style={styles.container}>\r\n        <ScrollView\r\n          showsVerticalScrollIndicator={false}\r\n          style={styles.container}\r\n          contentContainerStyle={styles.contentContainer}>\r\n        <Card >\r\n\r\n            <View style={styles.containerCard}>\r\n    \r\n                <Image\r\n                    size=\"medium\"\r\n                    source={{uri:course.image}}\r\n                    style={{width: 120, height: 70}}\r\n                />\r\n                <View style={styles.container2}>\r\n                    <Text style={styles.textTitle} numberOfLines={1}>{course.course_name}</Text>\r\n                    <Text style={styles.textAuthor} numberOfLines={1}>{`${course.instructor_first_name} ${course.instructor_last_name}`}</Text>\r\n                                \r\n                    <View style={styles.container3}>\r\n                    <Rating\r\n                        imageSize={20}\r\n                        type='custom'\r\n                        readonly\r\n                        style={styles.rating}\r\n                        startingValue={course.rating}\r\n                    /><Text>{`(${course.rating})`}</Text>\r\n                    </View>\r\n\r\n\r\n                    <Text style={styles.textPrice} numberOfLines={1}>{`RM ${course.price}`}</Text>\r\n                </View>\r\n\r\n            </View>     \r\n        </Card>\r\n        <Card\r\n        containerStyle={{marginBottom:20}}\r\n        title=\"Billing Information\"\r\n        >\r\n            <TextInput\r\n                style={styles.textinput}\r\n                label='Credit/Debit Card'\r\n                mode =\"outlined\"\r\n                theme={themetextinput}\r\n                value={card_number}\r\n                onChangeText={value => onChange('card_number',value)}\r\n                keyboardType={'numeric'} \r\n                maxLength={16}\r\n            />\r\n            <TextInput\r\n                style={styles.textinput}\r\n                label='First Name'\r\n                mode =\"outlined\"\r\n                theme={themetextinput}\r\n                value={first_name}\r\n                onChangeText={value => onChange('first_name',value)}\r\n            />\r\n            <TextInput\r\n                style={styles.textinput}\r\n                label='Last Name'\r\n                mode =\"outlined\"\r\n                theme={themetextinput}\r\n                value={last_name}\r\n                onChangeText={value => onChange('last_name',value)}\r\n            />\r\n            <TextInput\r\n                style={styles.textinput}\r\n                label='Email'\r\n                mode =\"outlined\"\r\n                theme={themetextinput}\r\n                value={email}\r\n                onChangeText={value => onChange('email',value)}\r\n            />\r\n            <TextInput\r\n              style={styles.textinput}\r\n              label='Phone Number'\r\n              mode =\"outlined\"\r\n              theme={themetextinput}\r\n              value={phone}\r\n              onChangeText={value => onChange('phone',value)}\r\n            />\r\n            <TextInput\r\n                style={styles.textinput}\r\n                label='Address Street'\r\n                mode =\"outlined\"\r\n                theme={themetextinput}\r\n                value={address_street}\r\n                onChangeText={value => onChange('address_street',value)}\r\n            />\r\n            <TextInput\r\n                style={styles.textinput}\r\n                label='City'\r\n                mode =\"outlined\"\r\n                theme={themetextinput}\r\n                value={address_city}\r\n                onChangeText={value => onChange('address_city',value)}\r\n            />\r\n            <TextInput\r\n                style={styles.textinput}\r\n                label='Postal Code'\r\n                mode =\"outlined\"\r\n                theme={themetextinput}\r\n                value={address_postal_code}\r\n                onChangeText={value => onChange('address_postal_code',value)}\r\n            />\r\n            <Button\r\n                titleStyle={styles.blueButtonTitle}\r\n                buttonStyle={styles.blueButton}\r\n                onPress={ enroll}\r\n                title={'Confirm & Pay'}\r\n                type=\"solid\" />\r\n        </Card>\r\n\r\n          \r\n         </ScrollView>\r\n      </View>\r\n    )\r\n}\r\n\r\n\r\nPaymentScreen.navigationOptions = screenProps =>  ({\r\n    headerBackground:   ()=> <Header/>,\r\n    headerTitleStyle: {\r\n        fontWeight: '100',\r\n      },\r\n    headerTintColor: '#fff',\r\n    headerTitle: () => <PaymentHeader/>,\r\n    headerLeft: () => BackButton(screenProps),\r\n    headerStyle: {\r\n      height: 70\r\n    }\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n    user: state.auth.user,\r\n    enroll_error : state.payment.errors,\r\n    enroll_success: state.payment.enroll_message\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    enrollCourse,\r\n    enrollReset\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(PaymentScreen);\r\n\r\nconst themetextinput = {\r\n    roundness: 5,\r\n  \r\n    colors: {\r\n      background: '#FDFEFE',\r\n      placeholder: 'black', \r\n      text: 'black',\r\n      primary: '#1E90FF'}\r\n  }; \r\n\r\n  const styles = StyleSheet.create({\r\n\r\n    wrapContainer: {\r\n        alignSelf: 'center',\r\n        flexDirection: 'row',\r\n        flexWrap: 'wrap'    },\r\n    containerCard:{\r\n        flex: 1, \r\n        alignItems: \"center\",\r\n        flexDirection: 'row',\r\n        padding : 20\r\n    },  \r\n    \r\n    textinput:{\r\n        height: 50,\r\n        fontSize: 13,\r\n        marginBottom: 8,\r\n  },\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: '#fff',\r\n    },\r\n    contentContainer: {\r\n      paddingTop: 50,\r\n    },\r\n    container2:{\r\n        flex: 1,\r\n        marginLeft:20\r\n    },\r\n    container3:{\r\n        alignItems: \"center\",                                       \r\n        flexDirection: 'row',\r\n\r\n    },\r\n    rating:{\r\n        alignItems: \"flex-start\",\r\n        left: 0,\r\n        marginTop: 5,\r\n        marginBottom: 5,\r\n        marginRight: 10\r\n\r\n    },\r\n    textTitle:{\r\n        fontSize: 15,\r\n        fontWeight: '500'\r\n    },\r\n    textAuthor:{\r\n        fontSize: 14,\r\n        fontWeight: '300'\r\n    },\r\n    textPrice:{\r\n        fontSize: 15,\r\n        fontWeight: '500'\r\n    },\r\n    blueButton:{\r\n        backgroundColor:'#1E90FF',\r\n        height: 45,\r\n        justifyContent:\"center\",\r\n        marginTop:5,\r\n        borderRadius: 5       \r\n    \r\n      },\r\n    \r\n      blueButtonTitle:{\r\n        fontSize: 16,\r\n      },\r\n    \r\n  });"]},"metadata":{},"sourceType":"module"}