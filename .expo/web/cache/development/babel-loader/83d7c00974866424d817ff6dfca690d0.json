{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\psm\\\\screens\\\\main_screens\\\\BadgeScreen\\\\BadgeScreen.js\";\n\nimport React, { useEffect } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport BadgeHeader from \"../../../components/BadgeScreen/BadgeHeader\";\nimport Header from \"../../../components/Header\";\nimport { isEmpty } from \"../../../utils/index\";\nimport { connect } from \"react-redux\";\nimport { getBadges } from \"../../main_screens/actions/badgeAction\";\nimport BadgeCard from \"../../../components/BadgeScreen/BadgeCard\";\n\nvar BadgeScreen = function BadgeScreen(_ref) {\n  var isAuthenticated = _ref.isAuthenticated,\n      loading = _ref.loading,\n      navigation = _ref.navigation,\n      getBadges = _ref.getBadges,\n      badges = _ref.badges;\n\n  var getMyBadges = function getMyBadges() {\n    getBadges();\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    }\n  }, React.createElement(ScrollView, {\n    showsVerticalScrollIndicator: false,\n    refreshControl: React.createElement(RefreshControl, {\n      refreshing: loading,\n      onRefresh: getMyBadges,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      }\n    }),\n    style: styles.container,\n    contentContainerStyle: styles.contentContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    }\n  }, !isEmpty(badges) ? React.createElement(BadgeCard, {\n    navigation: navigation,\n    badges: badges,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    }\n  }) : React.createElement(Text, {\n    style: styles.noBadge,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    }\n  }, \"You don't have any badges\")));\n};\n\nBadgeScreen.navigationOptions = {\n  headerBackground: function headerBackground() {\n    return React.createElement(Header, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      }\n    });\n  },\n  headerTitle: function headerTitle() {\n    return React.createElement(BadgeHeader, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      }\n    });\n  },\n  headerStyle: {\n    height: 70\n  }\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    loading: state.badge.loading,\n    badges: state.badge.badges\n  };\n};\n\nvar mapDispatchToProps = {\n  getBadges: getBadges\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(BadgeScreen);\nvar styles = StyleSheet.create({\n  noBadge: {\n    marginTop: 50,\n    textAlign: \"center\"\n  },\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  contentContainer: {\n    paddingTop: 50\n  }\n});","map":{"version":3,"sources":["C:/Users/Administrator/psm/screens/main_screens/BadgeScreen/BadgeScreen.js"],"names":["React","useEffect","BadgeHeader","Header","isEmpty","connect","getBadges","BadgeCard","BadgeScreen","isAuthenticated","loading","navigation","badges","getMyBadges","styles","container","contentContainer","noBadge","navigationOptions","headerBackground","headerTitle","headerStyle","height","mapStateToProps","state","badge","mapDispatchToProps","StyleSheet","create","marginTop","textAlign","flex","backgroundColor","paddingTop"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;;;;;;;AASA,OAAOC,WAAP;AACA,OAAOC,MAAP;AACA,SAAQC,OAAR;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,SAAR;AACA,OAAOC,SAAP;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAA2D;AAAA,MAAzDC,eAAyD,QAAzDA,eAAyD;AAAA,MAAzCC,OAAyC,QAAzCA,OAAyC;AAAA,MAAjCC,UAAiC,QAAjCA,UAAiC;AAAA,MAAtBL,SAAsB,QAAtBA,SAAsB;AAAA,MAAZM,MAAY,QAAZA,MAAY;;AAG7E,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAK;AACvBP,IAAAA,SAAS;AACV,GAFD;;AAIA,SAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEQ,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AACE,IAAA,4BAA4B,EAAE,KADhC;AAEE,IAAA,cAAc,EACZ,oBAAC,cAAD;AAAgB,MAAA,UAAU,EAAEL,OAA5B;AAAqC,MAAA,SAAS,EAAEG,WAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ;AAKE,IAAA,KAAK,EAAEC,MAAM,CAACC,SALhB;AAME,IAAA,qBAAqB,EAAED,MAAM,CAACE,gBANhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOI,CAACZ,OAAO,CAACQ,MAAD,CAAT,GAAmB,oBAAC,SAAD;AAAW,IAAA,UAAU,EAAED,UAAvB;AAAmC,IAAA,MAAM,EAAEC,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAnB,GAAwE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEE,MAAM,CAACG,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAP3E,CADF,CAFF;AAeD,CAtBD;;AAwBAT,WAAW,CAACU,iBAAZ,GAAgC;AAC9BC,EAAAA,gBAAgB,EAAI;AAAA,WAAI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAJ;AAAA,GADU;AAE9BC,EAAAA,WAAW,EAAE;AAAA,WAAM,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAN;AAAA,GAFiB;AAG9BC,EAAAA,WAAW,EAAE;AACXC,IAAAA,MAAM,EAAE;AADG;AAHiB,CAAhC;;AAQA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCd,IAAAA,OAAO,EAAEc,KAAK,CAACC,KAAN,CAAYf,OADW;AAEhCE,IAAAA,MAAM,EAAEY,KAAK,CAACC,KAAN,CAAYb;AAFY,GAAL;AAAA,CAA7B;;AAKA,IAAMc,kBAAkB,GAAG;AAC3BpB,EAAAA,SAAS,EAATA;AAD2B,CAA3B;AAIA,eAAeD,OAAO,CACpBkB,eADoB,EAEpBG,kBAFoB,CAAP,CAGblB,WAHa,CAAf;AAMA,IAAMM,MAAM,GAAGa,UAAU,CAACC,MAAX,CAAkB;AAC/BX,EAAAA,OAAO,EAAC;AACNY,IAAAA,SAAS,EAAC,EADJ;AAENC,IAAAA,SAAS,EAAC;AAFJ,GADuB;AAK/Bf,EAAAA,SAAS,EAAE;AACTgB,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE;AAFR,GALoB;AAU/BhB,EAAAA,gBAAgB,EAAE;AAChBiB,IAAAA,UAAU,EAAE;AADI;AAVa,CAAlB,CAAf","sourcesContent":["import React,{useEffect} from 'react';\r\nimport {\r\n  ScrollView,\r\n  RefreshControl,\r\n  StyleSheet,\r\n  View,\r\n  Text,\r\n  ActivityIndicator\r\n} from 'react-native';\r\nimport BadgeHeader from '../../../components/BadgeScreen/BadgeHeader'\r\nimport Header from '../../../components/Header'\r\nimport {isEmpty} from '../../../utils/index'\r\nimport { connect } from \"react-redux\";\r\nimport {getBadges} from \"../../main_screens/actions/badgeAction\";\r\nimport BadgeCard from \"../../../components/BadgeScreen/BadgeCard\";\r\n\r\nconst BadgeScreen = ({isAuthenticated,loading,navigation,getBadges,badges}) => {\r\n\r\n\r\n  const getMyBadges = () =>{\r\n    getBadges()\r\n  }\r\n\r\n  return( \r\n\r\n    <View style={styles.container}>\r\n      <ScrollView\r\n        showsVerticalScrollIndicator={false}\r\n        refreshControl={\r\n          <RefreshControl refreshing={loading} onRefresh={getMyBadges} />}\r\n    \r\n        style={styles.container}\r\n        contentContainerStyle={styles.contentContainer}>\r\n        {(!isEmpty(badges))?<BadgeCard navigation={navigation} badges={badges}/>:<Text style={styles.noBadge}>You don't have any badges</Text>}\r\n      </ScrollView>\r\n      </View>\r\n  ) \r\n\r\n}\r\n\r\nBadgeScreen.navigationOptions = {\r\n  headerBackground:   ()=><Header/>,\r\n  headerTitle: () => <BadgeHeader/>,\r\n  headerStyle: {\r\n    height: 70\r\n  }};\r\n\r\n  \r\nconst mapStateToProps = state => ({\r\n  loading: state.badge.loading,\r\n  badges: state.badge.badges\r\n});\r\n\r\nconst mapDispatchToProps = {\r\ngetBadges\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(BadgeScreen);\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  noBadge:{\r\n    marginTop:50,\r\n    textAlign:\"center\"\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n  },\r\n  \r\n  contentContainer: {\r\n    paddingTop: 50,\r\n  },\r\n  \r\n});\r\n"]},"metadata":{},"sourceType":"module"}