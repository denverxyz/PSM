{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\psm\\\\components\\\\HomeScreen\\\\SearchHeader.js\";\n\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { Button } from 'react-native-elements';\nimport { getCourses } from \"../../screens/main_screens/actions/homeActions\";\nimport { connect } from \"react-redux\";\n\nvar SearchHeader = function SearchHeader(_ref) {\n  var getCourses = _ref.getCourses;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      search = _useState2[0],\n      setSearch = _useState2[1];\n\n  var _onChangeText = function onChangeText(text) {\n    setSearch(text);\n  };\n\n  var onClick = function onClick() {\n    getCourses(search);\n  };\n\n  return React.createElement(View, {\n    style: styles.searchSection,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    }\n  }, React.createElement(TextInput, {\n    style: styles.input,\n    onChangeText: function onChangeText(text) {\n      return _onChangeText(text);\n    },\n    placeholder: 'Search',\n    value: search,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    }\n  }), React.createElement(Button, {\n    onPress: onClick,\n    buttonStyle: styles.button,\n    icon: React.createElement(Icon, {\n      style: styles.searchIcon,\n      name: \"search\",\n      size: 20,\n      color: \"#000\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    }\n  }));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    courses: state.home.courses,\n    loading: state.home.loading,\n    errors: state.home.errors\n  };\n};\n\nvar mapDispatchToProps = {\n  getCourses: getCourses\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchHeader);\nvar styles = StyleSheet.create({\n  input: {\n    height: 40,\n    minWidth: '60%',\n    borderColor: 'black',\n    backgroundColor: 'white',\n    borderTopLeftRadius: 10,\n    borderBottomLeftRadius: 10,\n    padding: 10\n  },\n  searchSection: {\n    width: 200,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    alignSelf: 'center'\n  },\n  searchIcon: {\n    backgroundColor: 'transparent',\n    padding: 2\n  },\n  button: {\n    width: 50,\n    height: 40,\n    backgroundColor: '#fff',\n    borderTopRightRadius: 10,\n    borderBottomRightRadius: 10,\n    borderTopLeftRadius: 0,\n    borderBottomLeftRadius: 0\n  }\n});","map":{"version":3,"sources":["C:/Users/Administrator/psm/components/HomeScreen/SearchHeader.js"],"names":["React","useState","Icon","Button","getCourses","connect","SearchHeader","search","setSearch","onChangeText","text","onClick","styles","searchSection","input","button","searchIcon","mapStateToProps","state","courses","home","loading","errors","mapDispatchToProps","StyleSheet","create","height","minWidth","borderColor","backgroundColor","borderTopLeftRadius","borderBottomLeftRadius","padding","width","flexDirection","justifyContent","alignItems","alignSelf","borderTopRightRadius","borderBottomRightRadius"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\r\nimport { StyleSheet,TextInput,View } from 'react-native';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\nimport { Button } from 'react-native-elements';\r\nimport {getCourses} from '../../screens/main_screens/actions/homeActions'\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\n\r\nconst SearchHeader = ({getCourses}) => {\r\n\r\n    const [search, setSearch] = useState('');\r\n    const onChangeText = (text) =>{\r\n        setSearch(text)\r\n    }\r\n\r\n    const onClick = () =>{\r\n        getCourses(search)\r\n    }\r\n\r\n    return (\r\n        <View style={styles.searchSection}>\r\n            <TextInput\r\n                style={styles.input}\r\n                onChangeText={text => onChangeText(text)}\r\n                placeholder={'Search'}\r\n                value={search}\r\n            />\r\n        <Button \r\n            onPress={onClick}\r\n            buttonStyle={styles.button}\r\n            icon={ <Icon style={styles.searchIcon} name=\"search\" size={20} color=\"#000\"/>}>\r\n        </Button>\r\n        </View>\r\n\r\n\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    courses: state.home.courses,\r\n    loading : state.home.loading,\r\n    errors: state.home.errors\r\n  });\r\n  \r\n  const mapDispatchToProps = {\r\n    getCourses\r\n  };\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(SearchHeader);\r\n  \r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    input:{\r\n        height:40,   \r\n        minWidth:'60%',\r\n        borderColor: 'black',\r\n        backgroundColor: 'white',\r\n        borderTopLeftRadius:10,\r\n        borderBottomLeftRadius:10,\r\n        padding:10\r\n    },\r\n    searchSection: {\r\n        width: 200,\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        alignSelf:'center'\r\n        //backgroundColor: '#fff',\r\n    },\r\n    searchIcon: {\r\n        backgroundColor: 'transparent',\r\n        padding:2\r\n    },\r\n    button: {\r\n        width:50,\r\n        height:40,\r\n        backgroundColor: '#fff',\r\n        borderTopRightRadius:10,\r\n        borderBottomRightRadius:10,\r\n        borderTopLeftRadius:0,\r\n        borderBottomLeftRadius:0,\r\n    },\r\n})\r\n"]},"metadata":{},"sourceType":"module"}