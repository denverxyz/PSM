{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from \"axios\";\nimport { READ_MYCOURSES_SUCCESS, READ_MYCOURSES_FAIL, LOADING_MYCOURSE } from \"../../actions\";\nimport { ENROLL } from \"../../../config/Config\";\nimport { setAuthToken, isEmpty } from \"../../../utils/index\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nexport var getMyCourses = function getMyCourses() {\n  return function _callee(dispatch) {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            dispatch({\n              type: LOADING_MYCOURSE\n            });\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('uselfToken', function (error, value) {\n              if (error) {\n                console.log(error);\n              } else {\n                if (isEmpty(value)) {\n                  console.log(\"no token\");\n                } else {\n                  setAuthToken(value);\n                }\n              }\n            }));\n\n          case 3:\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(axios.get(ENROLL).then(function (response) {\n              dispatch({\n                type: READ_MYCOURSES_SUCCESS,\n                payload: response.data\n              });\n            }).catch(function (error) {\n              if (error.response) {\n                console.log(error.response.data.message);\n                console.log(error.response.status);\n                console.log(error.response.headers);\n              } else if (error.request) {\n                console.log(error.request);\n              } else {\n                console.log('Error', error.message);\n              }\n\n              dispatch({\n                type: READ_MYCOURSES_FAIL,\n                payload: error.response.data.message\n              });\n            }));\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/Administrator/psm/screens/main_screens/actions/courseActions.js"],"names":["axios","READ_MYCOURSES_SUCCESS","READ_MYCOURSES_FAIL","LOADING_MYCOURSE","ENROLL","setAuthToken","isEmpty","AsyncStorage","getMyCourses","dispatch","type","getItem","error","value","console","log","get","then","response","payload","data","catch","message","status","headers","request"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,sBADJ,EAEIC,mBAFJ,EAGIC,gBAHJ;AAKA,SAASC,MAAT;AACA,SAASC,YAAT,EAAuBC,OAAvB;SACSC,Y;AAET,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA,SAAM,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAE9BA,YAAAA,QAAQ,CAAC;AAACC,cAAAA,IAAI,EAACP;AAAN,aAAD,CAAR;AAF8B;AAAA,6CAKxBI,YAAY,CAACI,OAAb,CAAqB,YAArB,EAAmC,UAACC,KAAD,EAAOC,KAAP,EAAiB;AACxD,kBAAID,KAAJ,EAAW;AAETE,gBAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AAED,eAJD,MAIK;AAEH,oBAAIN,OAAO,CAACO,KAAD,CAAX,EAAmB;AACjBC,kBAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACD,iBAFD,MAEK;AACHV,kBAAAA,YAAY,CAACQ,KAAD,CAAZ;AAGD;AAEF;AAEF,aAjBK,CALwB;;AAAA;AAAA;AAAA,6CAwBxBb,KAAK,CAACgB,GAAN,CAAUZ,MAAV,EAAkBa,IAAlB,CAAuB,UAAAC,QAAQ,EAAG;AACtCT,cAAAA,QAAQ,CAAC;AAEPC,gBAAAA,IAAI,EAAET,sBAFC;AAGPkB,gBAAAA,OAAO,EAAED,QAAQ,CAACE;AAHX,eAAD,CAAR;AAQD,aATK,EASHC,KATG,CASG,UAAAT,KAAK,EAAE;AAEd,kBAAIA,KAAK,CAACM,QAAV,EAAoB;AAElBJ,gBAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACM,QAAN,CAAeE,IAAf,CAAoBE,OAAhC;AACAR,gBAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACM,QAAN,CAAeK,MAA3B;AACAT,gBAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACM,QAAN,CAAeM,OAA3B;AACD,eALD,MAKO,IAAIZ,KAAK,CAACa,OAAV,EAAmB;AAExBX,gBAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACa,OAAlB;AACD,eAHM,MAGA;AAELX,gBAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBH,KAAK,CAACU,OAA3B;AACD;;AAEDb,cAAAA,QAAQ,CAAC;AAEPC,gBAAAA,IAAI,EAAER,mBAFC;AAGPiB,gBAAAA,OAAO,EAAEP,KAAK,CAACM,QAAN,CAAeE,IAAf,CAAoBE;AAHtB,eAAD,CAAR;AAMD,aA9BK,CAxBwB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAN;AAAA,CAArB","sourcesContent":["import axios from \"axios\";\r\nimport {\r\n    READ_MYCOURSES_SUCCESS,\r\n    READ_MYCOURSES_FAIL,\r\n    LOADING_MYCOURSE\r\n} from \"../../actions\"\r\nimport { ENROLL } from \"../../../config/Config\";\r\nimport { setAuthToken, isEmpty } from \"../../../utils/index\";\r\nimport { AsyncStorage } from 'react-native';\r\n\r\nexport const getMyCourses = () => async dispatch => {\r\n\r\n    dispatch({type:LOADING_MYCOURSE})\r\n\r\n    //assign token as header\r\n    await AsyncStorage.getItem('uselfToken', (error,value) => {\r\n      if (error) { \r\n  \r\n        console.log(error)\r\n  \r\n      }else{\r\n  \r\n        if (isEmpty(value)){\r\n          console.log(\"no token\");\r\n        }else{\r\n          setAuthToken(value)\r\n          //console.log(value)\r\n  \r\n        }\r\n  \r\n      }\r\n  \r\n    });\r\n  \r\n    await axios.get(ENROLL).then(response =>{\r\n      dispatch({\r\n  \r\n        type: READ_MYCOURSES_SUCCESS,\r\n        payload: response.data\r\n  \r\n      });\r\n  \r\n  \r\n    }).catch(error=>{\r\n  \r\n      if (error.response) {\r\n        // Request made and server responded\r\n        console.log(error.response.data.message);\r\n        console.log(error.response.status);\r\n        console.log(error.response.headers);\r\n      } else if (error.request) {\r\n        // The request was made but no response was received\r\n        console.log(error.request);\r\n      } else {\r\n        // Something happened in setting up the request that triggered an Error\r\n        console.log('Error', error.message);\r\n      }\r\n  \r\n      dispatch({\r\n  \r\n        type: READ_MYCOURSES_FAIL,\r\n        payload: error.response.data.message\r\n  \r\n      });\r\n    });\r\n    \r\n  };\r\n  "]},"metadata":{},"sourceType":"module"}