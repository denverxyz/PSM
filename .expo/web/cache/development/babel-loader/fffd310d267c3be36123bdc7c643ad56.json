{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\psm\\\\screens\\\\main_screens\\\\ProfileScreen\\\\ProfileScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Header from \"../../../components/Header\";\nimport ProfileHeader from \"../../../components/ProfileScreen/ProfileHeader\";\nimport { TextInput } from 'react-native-paper';\nimport { connect } from \"react-redux\";\nimport { Avatar, Button } from 'react-native-elements';\nimport { isEmpty } from \"../../../utils/index\";\nimport signout from \"../../../utils/signout\";\nimport { updateUser } from \"../../auth_screens/actions/authActions\";\n\nvar ProfileScreen = function ProfileScreen(_ref) {\n  var isAuthenticated = _ref.isAuthenticated,\n      navigation = _ref.navigation,\n      user = _ref.user,\n      loading = _ref.loading,\n      updateUser = _ref.updateUser;\n  useEffect(function () {\n    if (!isAuthenticated) {\n      signout(navigation);\n    }\n  }, [isAuthenticated]);\n\n  var _useState = useState({\n    phone: !isEmpty(user.phone) ? user.phone : \"\",\n    address_number: !isEmpty(user.address_number) ? user.address_number : \"\",\n    address_street: !isEmpty(user.address_street) ? user.address_street : \"\",\n    address_city: !isEmpty(user.address_city) ? user.address_city : \"\",\n    address_postal_code: !isEmpty(user.address_postal_code) ? user.address_postal_code : \"\",\n    address_state: !isEmpty(user.address_state) ? user.address_state : \"\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      formData = _useState2[0],\n      setFormData = _useState2[1];\n\n  var phone = formData.phone,\n      address_number = formData.address_number,\n      address_street = formData.address_street,\n      address_city = formData.address_city,\n      address_postal_code = formData.address_postal_code,\n      address_state = formData.address_state;\n\n  var onChange = function onChange(inputName, value) {\n    setFormData(_objectSpread({}, formData, _defineProperty({}, inputName, value)));\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    }\n  }, React.createElement(ScrollView, {\n    showsVerticalScrollIndicator: false,\n    contentContainerStyle: styles.scrollContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    }\n  }, React.createElement(Avatar, {\n    rounded: true,\n    size: \"xlarge\",\n    source: {\n      uri: !isEmpty(user.avatar) ? \"\" + user.avatar : 'https://www.shareicon.net/data/2016/07/05/791213_man_512x512.png'\n    },\n    containerStyle: styles.avatarContainer,\n    avatarStyle: styles.avatar,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    }\n  }), React.createElement(TextInput, {\n    disabled: true,\n    style: styles.textinput,\n    label: \"Email\",\n    mode: \"outlined\",\n    theme: themetextinput,\n    value: user.email,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    }\n  }), React.createElement(TextInput, {\n    style: styles.textinput,\n    label: \"Phone Number\",\n    mode: \"outlined\",\n    theme: themetextinput,\n    value: phone,\n    onChangeText: function onChangeText(value) {\n      return onChange('phone', value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    }\n  }), React.createElement(TextInput, {\n    disabled: true,\n    style: styles.textinput,\n    mode: \"outlined\",\n    theme: themetextinput,\n    label: \"Date of Birth\",\n    value: user.date_of_birth,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    }\n  }), React.createElement(TextInput, {\n    style: styles.textinput,\n    label: \"Address Number\",\n    mode: \"outlined\",\n    theme: themetextinput,\n    value: address_number,\n    onChangeText: function onChangeText(value) {\n      return onChange('address_number', value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    }\n  }), React.createElement(TextInput, {\n    style: styles.textinput,\n    label: \"Address Street\",\n    mode: \"outlined\",\n    theme: themetextinput,\n    value: address_street,\n    onChangeText: function onChangeText(value) {\n      return onChange('address_street', value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    }\n  }), React.createElement(TextInput, {\n    style: styles.textinput,\n    label: \"City\",\n    mode: \"outlined\",\n    theme: themetextinput,\n    value: address_city,\n    onChangeText: function onChangeText(value) {\n      return onChange('address_city', value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    }\n  }), React.createElement(TextInput, {\n    style: styles.textinput,\n    label: \"Postal Code\",\n    mode: \"outlined\",\n    theme: themetextinput,\n    value: address_postal_code,\n    onChangeText: function onChangeText(value) {\n      return onChange('address_postal_code', value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    }\n  }), React.createElement(TextInput, {\n    style: styles.textinput,\n    label: \"State\",\n    mode: \"outlined\",\n    theme: themetextinput,\n    value: address_state,\n    onChangeText: function onChangeText(value) {\n      return onChange('address_state', value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    }\n  }), React.createElement(Button, {\n    titleStyle: styles.blackButtonTitle,\n    buttonStyle: styles.blackButton,\n    loading: loading,\n    disabled: loading,\n    disabledStyle: styles.blackButton,\n    disabledTitleStyle: styles.blackButtonTitle,\n    onPress: function onPress() {\n      updateUser(formData);\n    },\n    title: \"UPDATE\",\n    type: \"solid\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    }\n  })));\n};\n\nProfileScreen.navigationOptions = {\n  headerBackground: function headerBackground() {\n    return React.createElement(Header, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      }\n    });\n  },\n  headerTitle: function headerTitle() {\n    return React.createElement(ProfileHeader, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      }\n    });\n  },\n  headerStyle: {\n    height: 70\n  }\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isAuthenticated: state.auth.isAuthenticated,\n    user: state.auth.user,\n    loading: state.auth.loading_user\n  };\n};\n\nvar mapDispatchToProps = {\n  updateUser: updateUser\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileScreen);\nvar themetextinput = {\n  roundness: 5,\n  colors: {\n    background: '#FDFEFE',\n    placeholder: 'black',\n    text: 'black',\n    primary: '#1E90FF'\n  }\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: 30,\n    paddingLeft: 20,\n    paddingRight: 20\n  },\n  scrollContainer: {\n    paddingBottom: 20\n  },\n  avatarContainer: {\n    marginTop: 50,\n    marginBottom: 50,\n    marginRight: \"auto\",\n    marginLeft: \"auto\",\n    borderColor: \"black\"\n  },\n  avatar: {\n    borderColor: \"black\",\n    backgroundColor: \"transparent\"\n  },\n  textinput: {\n    height: 50,\n    fontSize: 13,\n    marginBottom: 5\n  },\n  blackButton: {\n    backgroundColor: '#1E90FF',\n    height: 45,\n    justifyContent: \"center\",\n    marginTop: 5,\n    borderRadius: 5\n  },\n  blackButtonTitle: {\n    fontSize: 16\n  }\n});","map":{"version":3,"sources":["C:/Users/Administrator/psm/screens/main_screens/ProfileScreen/ProfileScreen.js"],"names":["React","useState","useEffect","Header","ProfileHeader","TextInput","connect","Avatar","Button","isEmpty","signout","updateUser","ProfileScreen","isAuthenticated","navigation","user","loading","phone","address_number","address_street","address_city","address_postal_code","address_state","formData","setFormData","onChange","inputName","value","styles","container","scrollContainer","uri","avatar","avatarContainer","textinput","themetextinput","email","date_of_birth","blackButtonTitle","blackButton","navigationOptions","headerBackground","headerTitle","headerStyle","height","mapStateToProps","state","auth","loading_user","mapDispatchToProps","roundness","colors","background","placeholder","text","primary","StyleSheet","create","flex","paddingTop","paddingLeft","paddingRight","paddingBottom","marginTop","marginBottom","marginRight","marginLeft","borderColor","backgroundColor","fontSize","justifyContent","borderRadius"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,SAAxB,QAAwC,OAAxC;;;;AAEA,OAAOC,MAAP;AACA,OAAOC,aAAP;AACA,SAASC,SAAT,QAAyB,oBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,EAAgBC,MAAhB,QAA8B,uBAA9B;AACA,SAAQC,OAAR;AACA,OAAOC,OAAP;AACA,SAAQC,UAAR;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAA+D;AAAA,MAA5DC,eAA4D,QAA5DA,eAA4D;AAAA,MAA3CC,UAA2C,QAA3CA,UAA2C;AAAA,MAAhCC,IAAgC,QAAhCA,IAAgC;AAAA,MAA1BC,OAA0B,QAA1BA,OAA0B;AAAA,MAAjBL,UAAiB,QAAjBA,UAAiB;AAEnFT,EAAAA,SAAS,CAAC,YAAI;AACZ,QAAI,CAACW,eAAL,EAAsB;AACpBH,MAAAA,OAAO,CAACI,UAAD,CAAP;AACD;AACF,GAJQ,EAIP,CAACD,eAAD,CAJO,CAAT;;AAFmF,kBAQnDZ,QAAQ,CAAC;AACvCgB,IAAAA,KAAK,EAAI,CAACR,OAAO,CAACM,IAAI,CAACE,KAAN,CAAT,GAAuBF,IAAI,CAACE,KAA5B,GAAkC,EADH;AAEvCC,IAAAA,cAAc,EAAC,CAACT,OAAO,CAACM,IAAI,CAACG,cAAN,CAAR,GAA8BH,IAAI,CAACG,cAAnC,GAAkD,EAF1B;AAGvCC,IAAAA,cAAc,EAAC,CAACV,OAAO,CAACM,IAAI,CAACI,cAAN,CAAR,GAA8BJ,IAAI,CAACI,cAAnC,GAAkD,EAH1B;AAIvCC,IAAAA,YAAY,EAAC,CAACX,OAAO,CAACM,IAAI,CAACK,YAAN,CAAR,GAA4BL,IAAI,CAACK,YAAjC,GAA8C,EAJpB;AAKvCC,IAAAA,mBAAmB,EAAC,CAACZ,OAAO,CAACM,IAAI,CAACM,mBAAN,CAAR,GAAmCN,IAAI,CAACM,mBAAxC,GAA4D,EALzC;AAMvCC,IAAAA,aAAa,EAAC,CAACb,OAAO,CAACM,IAAI,CAACO,aAAN,CAAR,GAA6BP,IAAI,CAACO,aAAlC,GAAgD;AANvB,GAAD,CAR2C;AAAA;AAAA,MAQ5EC,QAR4E;AAAA,MAQlEC,WARkE;;AAAA,MAoBjFP,KApBiF,GA0B/EM,QA1B+E,CAoBjFN,KApBiF;AAAA,MAqBjFC,cArBiF,GA0B/EK,QA1B+E,CAqBjFL,cArBiF;AAAA,MAsBjFC,cAtBiF,GA0B/EI,QA1B+E,CAsBjFJ,cAtBiF;AAAA,MAuBjFC,YAvBiF,GA0B/EG,QA1B+E,CAuBjFH,YAvBiF;AAAA,MAwBjFC,mBAxBiF,GA0B/EE,QA1B+E,CAwBjFF,mBAxBiF;AAAA,MAyBjFC,aAzBiF,GA0B/EC,QA1B+E,CAyBjFD,aAzBiF;;AA4BnF,MAAMG,QAAQ,GAAG,SAAXA,QAAW,CAACC,SAAD,EAAWC,KAAX,EAAoB;AACnCH,IAAAA,WAAW,mBAAMD,QAAN,sBAAiBG,SAAjB,EAA6BC,KAA7B,GAAX;AAED,GAHD;;AAKA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAIC,MAAM,CAACC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEG,oBAAC,UAAD;AAEC,IAAA,4BAA4B,EAAE,KAF/B;AAGC,IAAA,qBAAqB,EAAED,MAAM,CAACE,eAH/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIK,oBAAC,MAAD;AACJ,IAAA,OAAO,MADH;AAEJ,IAAA,IAAI,EAAC,QAFD;AAGJ,IAAA,MAAM,EAAE;AACNC,MAAAA,GAAG,EACD,CAACtB,OAAO,CAACM,IAAI,CAACiB,MAAN,CAAR,QAAyBjB,IAAI,CAACiB,MAA9B,GACA;AAHI,KAHJ;AAQJ,IAAA,cAAc,EAAEJ,MAAM,CAACK,eARnB;AASJ,IAAA,WAAW,EAAEL,MAAM,CAACI,MAThB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJL,EAeK,oBAAC,SAAD;AACI,IAAA,QAAQ,MADZ;AAEI,IAAA,KAAK,EAAEJ,MAAM,CAACM,SAFlB;AAGI,IAAA,KAAK,EAAC,OAHV;AAII,IAAA,IAAI,EAAE,UAJV;AAKI,IAAA,KAAK,EAAEC,cALX;AAMI,IAAA,KAAK,EAAEpB,IAAI,CAACqB,KANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfL,EAuBK,oBAAC,SAAD;AACE,IAAA,KAAK,EAAER,MAAM,CAACM,SADhB;AAEE,IAAA,KAAK,EAAC,cAFR;AAGE,IAAA,IAAI,EAAE,UAHR;AAIE,IAAA,KAAK,EAAEC,cAJT;AAKE,IAAA,KAAK,EAAElB,KALT;AAME,IAAA,YAAY,EAAE,sBAAAU,KAAK;AAAA,aAAIF,QAAQ,CAAC,OAAD,EAASE,KAAT,CAAZ;AAAA,KANrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvBL,EA+BK,oBAAC,SAAD;AACI,IAAA,QAAQ,MADZ;AAEI,IAAA,KAAK,EAAEC,MAAM,CAACM,SAFlB;AAGI,IAAA,IAAI,EAAE,UAHV;AAII,IAAA,KAAK,EAAEC,cAJX;AAKI,IAAA,KAAK,EAAC,eALV;AAMI,IAAA,KAAK,EAAEpB,IAAI,CAACsB,aANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA/BL,EAuCK,oBAAC,SAAD;AACI,IAAA,KAAK,EAAET,MAAM,CAACM,SADlB;AAEI,IAAA,KAAK,EAAC,gBAFV;AAGI,IAAA,IAAI,EAAE,UAHV;AAII,IAAA,KAAK,EAAEC,cAJX;AAKI,IAAA,KAAK,EAAEjB,cALX;AAMI,IAAA,YAAY,EAAE,sBAAAS,KAAK;AAAA,aAAIF,QAAQ,CAAC,gBAAD,EAAkBE,KAAlB,CAAZ;AAAA,KANvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvCL,EA+CK,oBAAC,SAAD;AACI,IAAA,KAAK,EAAEC,MAAM,CAACM,SADlB;AAEI,IAAA,KAAK,EAAC,gBAFV;AAGI,IAAA,IAAI,EAAE,UAHV;AAII,IAAA,KAAK,EAAEC,cAJX;AAKI,IAAA,KAAK,EAAEhB,cALX;AAMI,IAAA,YAAY,EAAE,sBAAAQ,KAAK;AAAA,aAAIF,QAAQ,CAAC,gBAAD,EAAkBE,KAAlB,CAAZ;AAAA,KANvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA/CL,EAuDK,oBAAC,SAAD;AACI,IAAA,KAAK,EAAEC,MAAM,CAACM,SADlB;AAEI,IAAA,KAAK,EAAC,MAFV;AAGI,IAAA,IAAI,EAAE,UAHV;AAII,IAAA,KAAK,EAAEC,cAJX;AAKI,IAAA,KAAK,EAAEf,YALX;AAMI,IAAA,YAAY,EAAE,sBAAAO,KAAK;AAAA,aAAIF,QAAQ,CAAC,cAAD,EAAgBE,KAAhB,CAAZ;AAAA,KANvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvDL,EA+DK,oBAAC,SAAD;AACI,IAAA,KAAK,EAAEC,MAAM,CAACM,SADlB;AAEI,IAAA,KAAK,EAAC,aAFV;AAGI,IAAA,IAAI,EAAE,UAHV;AAII,IAAA,KAAK,EAAEC,cAJX;AAKI,IAAA,KAAK,EAAEd,mBALX;AAMI,IAAA,YAAY,EAAE,sBAAAM,KAAK;AAAA,aAAIF,QAAQ,CAAC,qBAAD,EAAuBE,KAAvB,CAAZ;AAAA,KANvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA/DL,EAuEK,oBAAC,SAAD;AACI,IAAA,KAAK,EAAEC,MAAM,CAACM,SADlB;AAEI,IAAA,KAAK,EAAC,OAFV;AAGI,IAAA,IAAI,EAAE,UAHV;AAII,IAAA,KAAK,EAAEC,cAJX;AAKI,IAAA,KAAK,EAAEb,aALX;AAMI,IAAA,YAAY,EAAE,sBAAAK,KAAK;AAAA,aAAIF,QAAQ,CAAC,eAAD,EAAiBE,KAAjB,CAAZ;AAAA,KANvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvEL,EA+EK,oBAAC,MAAD;AACI,IAAA,UAAU,EAAEC,MAAM,CAACU,gBADvB;AAEI,IAAA,WAAW,EAAEV,MAAM,CAACW,WAFxB;AAGI,IAAA,OAAO,EAAEvB,OAHb;AAII,IAAA,QAAQ,EAAIA,OAJhB;AAKI,IAAA,aAAa,EAAEY,MAAM,CAACW,WAL1B;AAMI,IAAA,kBAAkB,EAAEX,MAAM,CAACU,gBAN/B;AAOI,IAAA,OAAO,EAAE,mBAAI;AACX3B,MAAAA,UAAU,CAACY,QAAD,CAAV;AACD,KATL;AAUI,IAAA,KAAK,EAAC,QAVV;AAWI,IAAA,IAAI,EAAC,OAXT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA/EL,CAFH,CADF;AAkGD,CAnID;;AAqIAX,aAAa,CAAC4B,iBAAd,GAAkC;AAChCC,EAAAA,gBAAgB,EAAI;AAAA,WAAI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAJ;AAAA,GADY;AAEhCC,EAAAA,WAAW,EAAE;AAAA,WAAK,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAL;AAAA,GAFmB;AAGhCC,EAAAA,WAAW,EAAE;AACXC,IAAAA,MAAM,EAAE;AADG;AAHmB,CAAlC;;AAOA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCjC,IAAAA,eAAe,EAAEiC,KAAK,CAACC,IAAN,CAAWlC,eADI;AAEhCE,IAAAA,IAAI,EAAE+B,KAAK,CAACC,IAAN,CAAWhC,IAFe;AAGhCC,IAAAA,OAAO,EAAE8B,KAAK,CAACC,IAAN,CAAWC;AAHY,GAAL;AAAA,CAA7B;;AAMA,IAAMC,kBAAkB,GAAG;AACzBtC,EAAAA,UAAU,EAAVA;AADyB,CAA3B;AAIA,eAAeL,OAAO,CACpBuC,eADoB,EAEpBI,kBAFoB,CAAP,CAGbrC,aAHa,CAAf;AAKA,IAAMuB,cAAc,GAAG;AACrBe,EAAAA,SAAS,EAAE,CADU;AAGrBC,EAAAA,MAAM,EAAE;AACNC,IAAAA,UAAU,EAAE,SADN;AAENC,IAAAA,WAAW,EAAE,OAFP;AAGNC,IAAAA,IAAI,EAAE,OAHA;AAINC,IAAAA,OAAO,EAAE;AAJH;AAHa,CAAvB;AASA,IAAM3B,MAAM,GAAG4B,UAAU,CAACC,MAAX,CAAkB;AAE/B5B,EAAAA,SAAS,EAAE;AACT6B,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,UAAU,EAAE,EAFH;AAGTC,IAAAA,WAAW,EAAE,EAHJ;AAITC,IAAAA,YAAY,EAAE;AAJL,GAFoB;AAS/B/B,EAAAA,eAAe,EAAE;AACfgC,IAAAA,aAAa,EAAC;AADC,GATc;AAY/B7B,EAAAA,eAAe,EAAG;AAChB8B,IAAAA,SAAS,EAAE,EADK;AAEhBC,IAAAA,YAAY,EAAE,EAFE;AAGhBC,IAAAA,WAAW,EAAC,MAHI;AAIhBC,IAAAA,UAAU,EAAE,MAJI;AAIOC,IAAAA,WAAW,EAAC;AAJnB,GAZa;AAmB/BnC,EAAAA,MAAM,EAAE;AACNmC,IAAAA,WAAW,EAAC,OADN;AAENC,IAAAA,eAAe,EAAE;AAFX,GAnBuB;AAuB/BlC,EAAAA,SAAS,EAAC;AACRU,IAAAA,MAAM,EAAE,EADA;AAERyB,IAAAA,QAAQ,EAAE,EAFF;AAGRL,IAAAA,YAAY,EAAE;AAHN,GAvBqB;AA4B/BzB,EAAAA,WAAW,EAAC;AACV6B,IAAAA,eAAe,EAAC,SADN;AAEVxB,IAAAA,MAAM,EAAE,EAFE;AAGV0B,IAAAA,cAAc,EAAC,QAHL;AAIVP,IAAAA,SAAS,EAAC,CAJA;AAKVQ,IAAAA,YAAY,EAAE;AALJ,GA5BmB;AAqC/BjC,EAAAA,gBAAgB,EAAC;AACf+B,IAAAA,QAAQ,EAAE;AADK;AArCc,CAAlB,CAAf","sourcesContent":["import React, {useState,useEffect} from 'react';\r\nimport { StyleSheet,ScrollView,View } from 'react-native';\r\nimport Header from '../../../components/Header';\r\nimport ProfileHeader from '../../../components/ProfileScreen/ProfileHeader';\r\nimport { TextInput} from 'react-native-paper';\r\nimport { connect } from \"react-redux\";\r\nimport { Avatar,Button } from 'react-native-elements';\r\nimport {isEmpty} from '../../../utils/index'\r\nimport signout from '../../../utils/signout'\r\nimport {updateUser} from '../../auth_screens/actions/authActions';\r\n\r\nconst ProfileScreen = ( {isAuthenticated, navigation,user, loading, updateUser} ) => {\r\n  \r\n  useEffect(()=>{\r\n    if (!isAuthenticated) {\r\n      signout(navigation)    \r\n    }\r\n  },[isAuthenticated])\r\n\r\n  const [formData, setFormData] = useState({\r\n    phone: ((!isEmpty(user.phone))?user.phone:\"\"),\r\n    address_number:!isEmpty(user.address_number)?user.address_number:\"\",\r\n    address_street:!isEmpty(user.address_street)?user.address_street:\"\",\r\n    address_city:!isEmpty(user.address_city)?user.address_city:\"\",\r\n    address_postal_code:!isEmpty(user.address_postal_code)?user.address_postal_code:\"\",\r\n    address_state:!isEmpty(user.address_state)?user.address_state:\"\"\r\n    });\r\n  \r\n\r\n\r\n  const { \r\n    phone, \r\n    address_number,\r\n    address_street,\r\n    address_city,\r\n    address_postal_code,\r\n    address_state\r\n  } = formData;\r\n\r\n  const onChange = (inputName,value) =>{\r\n    setFormData({ ...formData, [inputName]: value });\r\n\r\n  }\r\n\r\n  return (\r\n    <View style = {styles.container}>\r\n\r\n       <ScrollView\r\n        //style={styles.container}\r\n        showsVerticalScrollIndicator={false}\r\n        contentContainerStyle={styles.scrollContainer}>\r\n            <Avatar\r\n        rounded\r\n        size=\"xlarge\"\r\n        source={{\r\n          uri:\r\n            !isEmpty(user.avatar)?`${user.avatar}`:\r\n            'https://www.shareicon.net/data/2016/07/05/791213_man_512x512.png',\r\n        }}\r\n        containerStyle={styles.avatarContainer}\r\n        avatarStyle={styles.avatar}\r\n      />\r\n            <TextInput\r\n                disabled\r\n                style={styles.textinput}\r\n                label='Email'\r\n                mode =\"outlined\"\r\n                theme={themetextinput}\r\n                value={user.email}\r\n            />\r\n            <TextInput\r\n              style={styles.textinput}\r\n              label='Phone Number'\r\n              mode =\"outlined\"\r\n              theme={themetextinput}\r\n              value={phone}\r\n              onChangeText={value => onChange('phone',value)}\r\n            />\r\n            <TextInput\r\n                disabled\r\n                style={styles.textinput}\r\n                mode =\"outlined\"\r\n                theme={themetextinput}\r\n                label='Date of Birth'\r\n                value={user.date_of_birth}               \r\n            />\r\n            <TextInput\r\n                style={styles.textinput}\r\n                label='Address Number'\r\n                mode =\"outlined\"\r\n                theme={themetextinput}\r\n                value={address_number}\r\n                onChangeText={value => onChange('address_number',value)}\r\n            />\r\n            <TextInput\r\n                style={styles.textinput}\r\n                label='Address Street'\r\n                mode =\"outlined\"\r\n                theme={themetextinput}\r\n                value={address_street}\r\n                onChangeText={value => onChange('address_street',value)}\r\n            />\r\n            <TextInput\r\n                style={styles.textinput}\r\n                label='City'\r\n                mode =\"outlined\"\r\n                theme={themetextinput}\r\n                value={address_city}\r\n                onChangeText={value => onChange('address_city',value)}\r\n            />\r\n            <TextInput\r\n                style={styles.textinput}\r\n                label='Postal Code'\r\n                mode =\"outlined\"\r\n                theme={themetextinput}\r\n                value={address_postal_code}\r\n                onChangeText={value => onChange('address_postal_code',value)}\r\n            />\r\n            <TextInput\r\n                style={styles.textinput}\r\n                label='State'\r\n                mode =\"outlined\"\r\n                theme={themetextinput}\r\n                value={address_state}\r\n                onChangeText={value => onChange('address_state',value)}\r\n            />\r\n            <Button\r\n                titleStyle={styles.blackButtonTitle}\r\n                buttonStyle={styles.blackButton}\r\n                loading={loading}\r\n                disabled = {loading}\r\n                disabledStyle={styles.blackButton}\r\n                disabledTitleStyle={styles.blackButtonTitle}\r\n                onPress={()=>{\r\n                  updateUser(formData)\r\n                }}\r\n                title=\"UPDATE\"\r\n                type=\"solid\" />\r\n      </ScrollView>\r\n\r\n    </View>\r\n  );\r\n}\r\n\r\nProfileScreen.navigationOptions = {\r\n  headerBackground:   ()=><Header/>,\r\n  headerTitle: () =><ProfileHeader/>,\r\n  headerStyle: {\r\n    height: 70\r\n  }\r\n};\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  user: state.auth.user,\r\n  loading: state.auth.loading_user\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  updateUser\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ProfileScreen);\r\n\r\nconst themetextinput = {\r\n  roundness: 5,\r\n\r\n  colors: {\r\n    background: '#FDFEFE',\r\n    placeholder: 'black', \r\n    text: 'black',\r\n    primary: '#1E90FF'}\r\n}; \r\nconst styles = StyleSheet.create({\r\n\r\n  container: {\r\n    flex: 1,\r\n    paddingTop: 30,\r\n    paddingLeft: 20,\r\n    paddingRight: 20    \r\n  },\r\n\r\n  scrollContainer: {\r\n    paddingBottom:20,\r\n  },\r\n  avatarContainer : {\r\n    marginTop: 50,\r\n    marginBottom: 50,\r\n    marginRight:\"auto\",\r\n    marginLeft: \"auto\",    borderColor:\"black\"\r\n\r\n  },\r\n  avatar :{\r\n    borderColor:\"black\",\r\n    backgroundColor: \"transparent\"\r\n  },\r\n  textinput:{\r\n    height: 50,\r\n    fontSize: 13,\r\n    marginBottom: 5,\r\n  },\r\n  blackButton:{\r\n    backgroundColor:'#1E90FF',\r\n    height: 45,\r\n    justifyContent:\"center\",\r\n    marginTop:5,\r\n    borderRadius: 5       \r\n\r\n  },\r\n\r\n  blackButtonTitle:{\r\n    fontSize: 16,\r\n  },\r\n})"]},"metadata":{},"sourceType":"module"}