{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\psm\\\\screens\\\\main_screens\\\\CourseScreen\\\\CourseScreen.js\";\n\nimport React, { useEffect } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Header from \"../../../components/Header\";\nimport { connect } from \"react-redux\";\nimport MyCoursesCards from \"../../../components/CourseScreen/MyCoursesCards\";\nimport { getMyCourses } from \"../actions/courseActions\";\nimport { isEmpty } from \"../../../utils/index\";\nimport CourseHeader from \"../../../components/CourseScreen/CourseHeader\";\nimport signout from \"../../../utils/signout\";\nimport { resetLearning } from \"../../learning_module_screens/actions/learningActions\";\n\nvar CourseScreen = function CourseScreen(_ref) {\n  var loading = _ref.loading,\n      isAuthenticated = _ref.isAuthenticated,\n      navigation = _ref.navigation,\n      getMyCourses = _ref.getMyCourses,\n      my_courses = _ref.my_courses,\n      resetLearning = _ref.resetLearning;\n  useEffect(function () {\n    resetLearning();\n  }, []);\n\n  var getMyEnrolledCourse = function getMyEnrolledCourse() {\n    getMyCourses();\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    }\n  }, React.createElement(ScrollView, {\n    style: styles.container,\n    showsVerticalScrollIndicator: false,\n    refreshControl: React.createElement(RefreshControl, {\n      refreshing: loading,\n      onRefresh: getMyEnrolledCourse,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      }\n    }),\n    contentContainerStyle: styles.contentContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    }\n  }, !isEmpty(my_courses) ? React.createElement(MyCoursesCards, {\n    navigation: navigation,\n    my_courses: my_courses,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    }\n  }) : React.createElement(Text, {\n    style: styles.noCourse,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    }\n  }, \"You're not enrolled any courses\")));\n};\n\nCourseScreen.navigationOptions = {\n  headerBackground: function headerBackground() {\n    return React.createElement(Header, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      }\n    });\n  },\n  headerTitle: function headerTitle() {\n    return React.createElement(CourseHeader, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      }\n    });\n  },\n  headerStyle: {\n    height: 70\n  }\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isAuthenticated: state.auth.isAuthenticated,\n    my_courses: state.course.my_courses,\n    loading: state.course.loading,\n    errors: state.course.errors\n  };\n};\n\nvar mapDispatchToProps = {\n  getMyCourses: getMyCourses,\n  resetLearning: resetLearning\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(CourseScreen);\nvar styles = StyleSheet.create({\n  noCourse: {\n    marginTop: 50,\n    textAlign: \"center\"\n  },\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  contentContainer: {\n    paddingTop: 50\n  }\n});","map":{"version":3,"sources":["C:/Users/Administrator/psm/screens/main_screens/CourseScreen/CourseScreen.js"],"names":["React","useEffect","Header","connect","MyCoursesCards","getMyCourses","isEmpty","CourseHeader","signout","resetLearning","CourseScreen","loading","isAuthenticated","navigation","my_courses","getMyEnrolledCourse","styles","container","contentContainer","noCourse","navigationOptions","headerBackground","headerTitle","headerStyle","height","mapStateToProps","state","auth","course","errors","mapDispatchToProps","StyleSheet","create","marginTop","textAlign","flex","backgroundColor","paddingTop"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\r\nimport {\r\n  ScrollView,\r\n  StyleSheet,\r\n  RefreshControl,\r\n  View,\r\n  Text,\r\n  ActivityIndicator\r\n} from 'react-native';\r\nimport Header from '../../../components/Header'\r\nimport { connect } from \"react-redux\";\r\nimport MyCoursesCards from '../../../components/CourseScreen/MyCoursesCards'\r\nimport {getMyCourses} from '../actions/courseActions'\r\nimport {isEmpty} from '../../../utils/index'\r\nimport CourseHeader from '../../../components/CourseScreen/CourseHeader';\r\nimport signout from '../../../utils/signout'\r\nimport {resetLearning} from '../../learning_module_screens/actions/learningActions'\r\n\r\n\r\nconst CourseScreen = ({loading,isAuthenticated,navigation,getMyCourses,my_courses,resetLearning}) => {\r\n\r\n  useEffect(()=>{\r\n    resetLearning()\r\n      // console.log(my_courses)\r\n  },[])\r\n\r\n  const getMyEnrolledCourse = () =>{\r\n    getMyCourses()\r\n  }\r\n\r\n\r\n\r\nreturn( \r\n\r\n    <View style={styles.container}>\r\n      <ScrollView\r\n        style={styles.container}\r\n        showsVerticalScrollIndicator={false}\r\n        refreshControl={\r\n          <RefreshControl refreshing={loading} onRefresh={getMyEnrolledCourse} />}\r\n        contentContainerStyle={styles.contentContainer}>\r\n        {/* {loading?<ActivityIndicator size=\"large\" color=\"#0000ff\" />:null } */}\r\n        {(!isEmpty(my_courses))?<MyCoursesCards navigation={navigation} my_courses={my_courses}/>:<Text style={styles.noCourse}>You're not enrolled any courses</Text>}\r\n      </ScrollView>\r\n      </View>\r\n  ) \r\n\r\n}\r\n\r\nCourseScreen.navigationOptions = {\r\n  headerBackground:   ()=><Header/>,\r\n  headerTitle: () => <CourseHeader/>,\r\n  headerStyle: {\r\n    height: 70\r\n  }\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  my_courses: state.course.my_courses,\r\n  loading : state.course.loading,\r\n  errors: state.course.errors\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getMyCourses,\r\n  resetLearning\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CourseScreen);\r\n\r\nconst styles = StyleSheet.create({\r\n  noCourse:{\r\n    marginTop:50,\r\n    textAlign:\"center\"\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n  },\r\n  \r\n  contentContainer: {\r\n    paddingTop: 50,\r\n  },\r\n  \r\n});\r\n"]},"metadata":{},"sourceType":"module"}